{"version":3,"file":"lib_index_js.a263235f8095ca469ce1.js","mappings":"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","sources":["webpack://jupyt/./src/components/cell-approval-controls.tsx","webpack://jupyt/./src/components/chat-header.tsx","webpack://jupyt/./src/components/chat-input.tsx","webpack://jupyt/./src/components/chat-message.tsx","webpack://jupyt/./src/components/chat.tsx","webpack://jupyt/./src/components/jupyt-settings.tsx","webpack://jupyt/./src/components/model-selector.tsx","webpack://jupyt/./src/components/user-profile.tsx","webpack://jupyt/./src/config.ts","webpack://jupyt/./src/hooks/use-agentic-loop-manager.ts","webpack://jupyt/./src/hooks/use-agentic-state.ts","webpack://jupyt/./src/hooks/use-notebook-operations.ts","webpack://jupyt/./src/hooks/use-show-notification.ts","webpack://jupyt/./src/index.ts","webpack://jupyt/./src/panel.tsx","webpack://jupyt/./src/plugins/cell-toolbar.ts","webpack://jupyt/./src/services/api-service.ts","webpack://jupyt/./src/services/auth-service.ts","webpack://jupyt/./src/services/cell-service.ts","webpack://jupyt/./src/theme-provider.tsx","webpack://jupyt/./src/theme.ts","webpack://jupyt/./src/types/cell-metadata.ts","webpack://jupyt/./src/utils/cellOutputExtractor.ts","webpack://jupyt/./src/utils/chatUtils.ts","webpack://jupyt/./src/utils/notebook-state-extractor.ts"],"sourcesContent":["import { Box, Button, Typography, Paper } from '@mui/material';\nimport { parseDiff, Diff } from 'react-diff-view';\nimport 'react-diff-view/style/index.css';\nimport { JupytPendingOperation } from '../types/cell-metadata';\nimport { useTheme } from '@mui/material/styles';\nimport React from 'react';\ninterface ICellApprovalControlsProps {\n  pendingOperation: JupytPendingOperation;\n  onApprove: () => void;\n  onReject: () => void;\n}\n\n/**\n * React component rendered within a cell to show pending operation details (diff/preview)\n * and provide Approve/Reject buttons.\n */\nexport function CellApprovalControls({\n  pendingOperation,\n  onApprove,\n  onReject\n}: ICellApprovalControlsProps) {\n  const theme = useTheme();\n  const { type, code, oldCode, runNeeded } = pendingOperation;\n\n  const renderDiff = () => {\n    if (type === 'update_cell' && typeof code === 'string') {\n      const currentOldCode = oldCode || '';\n      const newLines = code.split('\\n');\n      const oldLines = currentOldCode.split('\\n');\n\n      const diffText = [\n        '--- a/Original',\n        '+++ b/Proposed',\n        '@@ -1,' + oldLines.length + ' +1,' + newLines.length + ' @@',\n        ...oldLines.map(line => '-' + line),\n        ...newLines.map(line => '+' + line)\n      ].join('\\n');\n\n      try {\n        const files = parseDiff(diffText);\n        if (!files?.[0]) {\n          return null;\n        }\n\n        return (\n          <Box\n            sx={{\n              border: '1px solid',\n              borderColor: 'divider',\n              borderRadius: 1,\n              overflow: 'hidden',\n              mb: 1,\n              '& .diff': {\n                fontSize: '0.9em',\n                color: theme.palette.text.primary,\n                backgroundColor:\n                  theme.palette.mode === 'dark'\n                    ? '#1a1a1a'\n                    : theme.palette.background.paper\n              },\n              '& .diff-gutter': {\n                backgroundColor:\n                  theme.palette.mode === 'dark' ? '#252525' : '#f0f0f0',\n                color: theme.palette.mode === 'dark' ? '#888' : '#666',\n                padding: '0 8px'\n              },\n              '& .diff-code': {\n                color: theme.palette.text.primary,\n                padding: '0 8px'\n              },\n              '& .diff-code-delete': {\n                backgroundColor:\n                  theme.palette.mode === 'dark'\n                    ? 'rgba(255, 100, 100, 0.15)'\n                    : '#ffeef0',\n                color: theme.palette.mode === 'dark' ? '#ff9999' : '#cc0000'\n              },\n              '& .diff-code-insert': {\n                backgroundColor:\n                  theme.palette.mode === 'dark'\n                    ? 'rgba(133, 255, 133, 0.15)'\n                    : '#e6ffec',\n                color: theme.palette.mode === 'dark' ? '#85ff85' : '#007700'\n              },\n              '& .diff-gutter-delete': {\n                backgroundColor:\n                  theme.palette.mode === 'dark' ? '#402020' : '#fff0f0'\n              },\n              '& .diff-gutter-insert': {\n                backgroundColor:\n                  theme.palette.mode === 'dark' ? '#204020' : '#f0fff0'\n              },\n              '& .diff-hunk-header': {\n                backgroundColor:\n                  theme.palette.mode === 'dark' ? '#303030' : '#f8f8f8',\n                color: theme.palette.mode === 'dark' ? '#888' : '#666'\n              }\n            }}\n          >\n            <Diff\n              viewType=\"unified\"\n              diffType={files[0].type}\n              hunks={files[0].hunks}\n              optimizeSelection\n              gutterType=\"anchor\"\n            />\n          </Box>\n        );\n      } catch (error) {\n        console.error('Error parsing diff for cell approval:', error);\n        return (\n          <Typography color=\"error\" variant=\"body2\">\n            Error displaying diff. Please check console.\n          </Typography>\n        );\n      }\n    }\n    return null;\n  };\n\n  const renderCodePreview = () => {\n    if (type === 'create_cell' && code) {\n      return (\n        <Box\n          component={Paper}\n          variant=\"outlined\"\n          sx={{\n            p: 1.5,\n            mb: 1,\n            bgcolor:\n              theme.palette.mode === 'dark'\n                ? 'rgba(133, 255, 133, 0.1)'\n                : '#e6ffec',\n            fontFamily: 'monospace',\n            whiteSpace: 'pre-wrap',\n            overflowX: 'auto',\n            fontSize: '0.9em',\n            color: theme.palette.mode === 'dark' ? '#85ff85' : '#007700',\n            border: '1px solid',\n            borderColor:\n              theme.palette.mode === 'dark'\n                ? 'rgba(133, 255, 133, 0.2)'\n                : '#b0eab5'\n          }}\n        >\n          {code}\n        </Box>\n      );\n    }\n    return null;\n  };\n\n  const renderDeleteOverlay = () => {\n    if (type === 'delete_cell') {\n      return (\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            bgcolor:\n              theme.palette.mode === 'dark'\n                ? 'rgba(255, 100, 100, 0.15)'\n                : '#ffeef0',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            p: 2,\n            border: '1px dashed',\n            borderColor: theme.palette.mode === 'dark' ? '#ff9999' : '#cc0000',\n            borderRadius: 1,\n            zIndex: 5\n          }}\n        >\n          <Typography\n            color={theme.palette.mode === 'dark' ? '#ff9999' : '#cc0000'}\n            variant=\"h6\"\n          >\n            Marked for Deletion\n          </Typography>\n        </Box>\n      );\n    }\n    return null;\n  };\n\n  const getOperationTitle = () => {\n    switch (type) {\n      case 'create_cell':\n        return 'Approve Cell Creation?';\n      case 'update_cell':\n        return 'Approve Cell Update?';\n      case 'delete_cell':\n        return 'Approve Cell Deletion?';\n      default:\n        return 'Approve Operation?';\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        border: '2px dashed',\n        borderColor: 'primary.main',\n        p: 1.5,\n        borderRadius: 1,\n        position: 'relative',\n        mb: 1,\n        bgcolor:\n          theme.palette.mode === 'dark'\n            ? 'rgba(255, 255, 255, 0.03)'\n            : 'rgba(0, 0, 0, 0.02)',\n        color: theme.palette.text.primary\n      }}\n    >\n      {renderDeleteOverlay()}\n      <Typography\n        variant=\"subtitle1\"\n        gutterBottom\n        sx={{\n          fontWeight: 'bold',\n          color:\n            theme.palette.mode === 'dark'\n              ? theme.palette.primary.light\n              : theme.palette.primary.main\n        }}\n      >\n        {getOperationTitle()}\n      </Typography>\n\n      {type === 'update_cell' ? renderDiff() : renderCodePreview()}\n\n      {runNeeded && (\n        <Typography\n          variant=\"caption\"\n          display=\"block\"\n          sx={{\n            mb: 1,\n            fontStyle: 'italic',\n            color:\n              theme.palette.mode === 'dark'\n                ? theme.palette.grey[400]\n                : theme.palette.grey[700]\n          }}\n        >\n          Note: This cell will be executed after approval.\n        </Typography>\n      )}\n\n      <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onApprove}\n        >\n          Approve\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          color=\"error\"\n          onClick={onReject}\n        >\n          Reject\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, IconButton, Tooltip } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ChatHeaderProps } from '../types/chat-header';\n\nexport function ChatHeader({\n  isStreaming,\n  currentType,\n  onNewChat,\n  onModelConfigChange\n}: ChatHeaderProps): JSX.Element {\n  return (\n    <Box sx={{ py: 2 }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          component=\"h1\"\n          sx={{\n            fontWeight: 600,\n            color: 'text.primary',\n            letterSpacing: '-0.5px',\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          }}\n        >\n          Jupyt\n        </Typography>\n\n        <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n          <Tooltip title=\"Start new chat\">\n            <IconButton\n              onClick={onNewChat}\n              disabled={isStreaming}\n              size=\"small\"\n              sx={{\n                bgcolor: 'primary.main',\n                color: 'primary.contrastText',\n                '&:hover': {\n                  bgcolor: 'primary.dark'\n                },\n                '&.Mui-disabled': {\n                  bgcolor: 'action.disabledBackground',\n                  color: 'action.disabled'\n                }\n              }}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {isStreaming && currentType && (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: 'text.secondary',\n            mt: 0.5,\n            fontWeight: 400\n          }}\n        >\n          {currentType === 'simple_query'\n            ? 'Processing Query'\n            : 'Agent Planning'}\n        </Typography>\n      )}\n    </Box>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Box, TextField, IconButton, CircularProgress } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport StopIcon from '@mui/icons-material/Stop';\nimport { ChatInputProps } from '../types/chat-input';\n\nexport function ChatInput({\n  value,\n  isStreaming,\n  onChange,\n  onSubmit,\n  isAgenticLooping,\n  onStopAgenticLoop\n}: ChatInputProps): JSX.Element {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const handleCellSelected = (event: CustomEvent<any>) => {\n      const cellInfo = event.detail;\n      const cellRef = `@cell${cellInfo.cellNumber} `;\n\n      // If there's already text, add the cell reference at the cursor position\n      if (inputRef.current) {\n        const cursorPos = inputRef.current.selectionStart || 0;\n        const currentValue = value;\n        const newValue =\n          currentValue.slice(0, cursorPos) +\n          cellRef +\n          currentValue.slice(cursorPos);\n        onChange(newValue);\n\n        // Set cursor position after the cell reference\n        setTimeout(() => {\n          if (inputRef.current) {\n            const newCursorPos = cursorPos + cellRef.length;\n            inputRef.current.setSelectionRange(newCursorPos, newCursorPos);\n            inputRef.current.focus();\n          }\n        }, 0);\n      } else {\n        onChange(cellRef);\n      }\n    };\n\n    document.addEventListener(\n      'jupyt:cell-selected',\n      handleCellSelected as EventListener\n    );\n    return () => {\n      document.removeEventListener(\n        'jupyt:cell-selected',\n        handleCellSelected as EventListener\n      );\n    };\n  }, [value, onChange]);\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={onSubmit}\n      sx={{\n        display: 'flex',\n        gap: 1,\n        p: 1,\n        bgcolor: theme =>\n          theme.palette.mode === 'dark' ? 'background.paper' : 'grey.50',\n        borderRadius: 2,\n        border: '1px solid',\n        borderColor: theme =>\n          theme.palette.mode === 'dark' ? 'grey.800' : 'grey.200'\n      }}\n    >\n      <TextField\n        fullWidth\n        multiline\n        maxRows={4}\n        variant=\"outlined\"\n        placeholder=\"Ask Jupyt anything... Use @cell to reference cells and @search to find datasets\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        onKeyDown={e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n          }\n        }}\n        disabled={isStreaming}\n        inputRef={inputRef}\n        sx={{\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 2,\n            bgcolor: theme =>\n              theme.palette.mode === 'dark' ? 'background.default' : 'white'\n          }\n        }}\n      />\n      <IconButton\n        onClick={isAgenticLooping ? onStopAgenticLoop : onSubmit}\n        disabled={!isAgenticLooping && (!value.trim() || isStreaming)}\n        sx={{\n          minWidth: 48,\n          height: 48,\n          borderRadius: '12px',\n          transition: 'all 0.2s ease-in-out',\n          ...(isAgenticLooping\n            ? {\n                bgcolor: 'error.main',\n                color: 'white',\n                '&:hover': {\n                  bgcolor: 'error.dark',\n                  transform: 'scale(1.05)'\n                }\n              }\n            : {\n                bgcolor: 'primary.main',\n                color: 'white',\n                '&:hover': {\n                  bgcolor: 'primary.dark',\n                  transform: 'scale(1.05)'\n                },\n                '&.Mui-disabled': {\n                  bgcolor: 'grey.200',\n                  color: 'grey.400'\n                }\n              })\n        }}\n      >\n        {isStreaming ? (\n          <CircularProgress size={24} color=\"inherit\" />\n        ) : isAgenticLooping ? (\n          <StopIcon />\n        ) : (\n          <SendIcon />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, IconButton, Button } from '@mui/material';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ReactMarkdown from 'react-markdown';\nimport { Components } from 'react-markdown';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { CellOperation } from '../types/stream';\nimport { CodeCell } from '@jupyterlab/cells';\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport { ChatMessageProps } from '../types/chat-message';\n\nexport function ChatMessage({\n  role,\n  content,\n  onCopyCode,\n  onExecuteCode,\n  onModifyCell,\n  referencedCells = new Set(),\n  operations,\n  showNotification,\n  onRevertOperation,\n  canRevertOperation,\n  notebookPanel\n}: ChatMessageProps): JSX.Element {\n  const isUser = role === 'user';\n  const hasOperationWithCode = !!operations?.some(\n    op => op.code && op.code.trim()\n  );\n\n  console.log('operations', operations);\n\n  const [revertStates, setRevertStates] = React.useState<\n    Record<number, 'idle' | 'checking' | 'reverting' | 'disabled'>\n  >({});\n  const [canRevertFlags, setCanRevertFlags] = React.useState<\n    Record<number, boolean>\n  >({});\n\n  React.useEffect(() => {\n    if (\n      role === 'assistant' &&\n      operations &&\n      operations.length > 0 &&\n      canRevertOperation\n    ) {\n      const checkRevertStatus = async () => {\n        const initialStates: Record<number, 'idle' | 'checking'> = {};\n        const flags: Record<number, boolean> = {};\n        operations.forEach((_, index) => {\n          initialStates[index] = 'checking';\n          flags[index] = false;\n        });\n        setRevertStates(initialStates);\n        setCanRevertFlags(flags);\n\n        for (let i = 0; i < operations.length; i++) {\n          const op = operations[i];\n          if (op.type !== 'delete_cell') {\n            const canRevert = await canRevertOperation(op);\n            setCanRevertFlags(prev => ({ ...prev, [i]: canRevert }));\n            setRevertStates(prev => ({ ...prev, [i]: 'idle' }));\n          } else {\n            setRevertStates(prev => ({ ...prev, [i]: 'disabled' }));\n          }\n        }\n      };\n      checkRevertStatus();\n    }\n  }, [operations, canRevertOperation, role]);\n\n  const handleRevertClick = async (op: CellOperation, index: number) => {\n    if (!onRevertOperation || !notebookPanel) {\n      return;\n    }\n\n    setRevertStates(prev => ({ ...prev, [index]: 'reverting' }));\n\n    const notebook = notebookPanel.content;\n    let targetCell: CodeCell | undefined = undefined;\n\n    if (op.type === 'update_cell' && typeof op.cell_index === 'number') {\n      targetCell = notebook.widgets[op.cell_index] as CodeCell;\n    } else if (op.type === 'create_cell' && typeof op.cell_index === 'number') {\n      targetCell = notebook.widgets[op.cell_index] as CodeCell;\n    }\n\n    if (targetCell) {\n      try {\n        await onRevertOperation(op, targetCell);\n        const canStillRevert = await canRevertOperation?.(op);\n        setCanRevertFlags(prev => ({ ...prev, [index]: !!canStillRevert }));\n        setRevertStates(prev => ({ ...prev, [index]: 'idle' }));\n      } catch (e) {\n        console.error('Revert failed:', e);\n        showNotification?.('Failed to revert operation.', 'error');\n        setRevertStates(prev => ({ ...prev, [index]: 'idle' }));\n      }\n    } else {\n      showNotification?.('Could not find target cell to revert.', 'error');\n      setRevertStates(prev => ({ ...prev, [index]: 'idle' }));\n    }\n  };\n\n  const renderSpecialState = () => {\n    if (content.includes('[Processing cell operation...]')) {\n      return (\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, py: 2 }}>\n          <CircularProgress size={18} color=\"info\" />\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Processing cell operation...\n          </Typography>\n        </Box>\n      );\n    }\n    if (content.includes('[Executing cell operation...]')) {\n      return (\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, py: 2 }}>\n          <CircularProgress size={18} color=\"primary\" />\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Executing cell operation...\n          </Typography>\n        </Box>\n      );\n    }\n    if (content.includes('[Cell operation executed]')) {\n      return (\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, py: 2 }}>\n          <Typography variant=\"body2\" color=\"success.main\">\n            Cell operation executed.\n          </Typography>\n        </Box>\n      );\n    }\n    return null;\n  };\n\n  const cleanedContent = content;\n\n  const renderCodeBlockFromMarkdown = (code: string) => {\n    let cleanCode = code;\n    // const langMatch = code.match(/^```(\\w+)\\n?/);\n\n    if (cleanCode.startsWith('```')) {\n      cleanCode = cleanCode.replace(/^```(\\w+)?\\n?/, '');\n    }\n    if (cleanCode.endsWith('```')) {\n      cleanCode = cleanCode.replace(/```$/, '');\n    }\n    cleanCode = cleanCode.trim();\n\n    if (!cleanCode) {\n      return null;\n    }\n\n    return (\n      <Box\n        sx={{\n          position: 'relative',\n          my: 1,\n          backgroundColor: 'action.hover',\n          borderRadius: 1,\n          overflow: 'hidden'\n        }}\n      >\n        <pre style={{ margin: 0, position: 'relative' }}>\n          <code\n            style={{\n              display: 'block',\n              padding: '12px',\n              fontSize: '15px',\n              lineHeight: '1.6',\n              fontFamily: '\"Fira Code\", \"Consolas\", monospace',\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-word'\n            }}\n          >\n            {cleanCode}\n          </code>\n        </pre>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n            gap: 1,\n            p: 1,\n            borderTop: '1px solid',\n            borderColor: 'divider',\n            backgroundColor: 'background.paper'\n          }}\n        >\n          <IconButton\n            size=\"small\"\n            onClick={() => onCopyCode?.(cleanCode)}\n            title=\"Copy code\"\n          >\n            <ContentCopyIcon fontSize=\"small\" />\n          </IconButton>\n          {onExecuteCode && (\n            <IconButton\n              size=\"small\"\n              onClick={() => onExecuteCode(cleanCode)}\n              title=\"Execute code in new cell\"\n            >\n              <PlayArrowIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          {referencedCells.size > 0 && onModifyCell && (\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              {Array.from(referencedCells).map(cellNumber => (\n                <IconButton\n                  key={cellNumber}\n                  size=\"small\"\n                  onClick={() => onModifyCell(cleanCode, cellNumber - 1)}\n                  title={`Modify cell ${cellNumber}`}\n                  sx={{\n                    bgcolor: 'background.paper',\n                    '&:hover': { bgcolor: 'grey.100' },\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                    position: 'relative'\n                  }}\n                >\n                  <EditIcon fontSize=\"small\" />\n                  <Typography\n                    component=\"span\"\n                    sx={{\n                      position: 'absolute',\n                      top: -8,\n                      right: -8,\n                      fontSize: '0.75rem',\n                      bgcolor: 'primary.main',\n                      color: 'white',\n                      width: 16,\n                      height: 16,\n                      borderRadius: '50%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      lineHeight: '16px'\n                    }}\n                  >\n                    {cellNumber}\n                  </Typography>\n                </IconButton>\n              ))}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    );\n  };\n\n  const markdownComponents: Components = {\n    code(props) {\n      const { children, className, node, ...rest } = props;\n      const match = /language-(\\w+)/.exec(className || '');\n      const isInline = !match && !className?.startsWith('language-');\n\n      if (hasOperationWithCode && !isInline) {\n        return null;\n      }\n\n      if (isInline) {\n        return (\n          <code\n            {...rest}\n            style={{\n              backgroundColor: 'var(--jp-layout-color2, rgba(0,0,0,0.1))',\n              padding: '0.2em 0.4em',\n              margin: 0,\n              fontSize: '85%',\n              borderRadius: '3px',\n              fontFamily: 'monospace'\n            }}\n          >\n            {children}\n          </code>\n        );\n      }\n\n      return renderCodeBlockFromMarkdown(String(children).trim());\n    },\n    p(props) {\n      const content = React.Children.toArray(props.children)\n        .map(child => (typeof child === 'string' ? child : ''))\n        .join('');\n      if (content.trim() === '') {\n        return null;\n      }\n      return (\n        <Typography variant=\"body1\" component=\"p\" sx={{ mb: 1 }}>\n          {props.children}\n        </Typography>\n      );\n    },\n    ul(props) {\n      return (\n        <Typography component=\"ul\" sx={{ pl: 2, mb: 1 }}>\n          {props.children}\n        </Typography>\n      );\n    },\n    ol(props) {\n      return (\n        <Typography component=\"ol\" sx={{ pl: 2, mb: 1 }}>\n          {props.children}\n        </Typography>\n      );\n    },\n    li(props) {\n      return (\n        <Typography component=\"li\" sx={{ mb: 0.5 }}>\n          {props.children}\n        </Typography>\n      );\n    },\n    pre({ children }) {\n      const codeChild = React.Children.toArray(children).find(\n        (child: any) => child?.type === 'code'\n      );\n      return codeChild ? <>{codeChild}</> : <pre>{children}</pre>;\n    }\n  };\n\n  const renderIndividualOperation = (op: CellOperation, index: number) => {\n    const cellDisplayIndex =\n      typeof op.cell_index === 'number' ? op.cell_index + 1 : 'N/A';\n    let title = '';\n    let codeContent = op.code || '';\n\n    switch (op.type) {\n      case 'create_cell':\n        title = `Create Cell (at index ${cellDisplayIndex})`;\n        break;\n      case 'update_cell':\n        title = `Update Cell ${cellDisplayIndex}`;\n        break;\n      case 'delete_cell':\n        title = `Delete Cell ${cellDisplayIndex}`;\n        codeContent = `# Deleting cell ${cellDisplayIndex}`;\n        break;\n      default:\n        title = `Unknown Operation on Cell ${cellDisplayIndex}`;\n    }\n\n    if (!codeContent.trim() && op.type !== 'delete_cell') {\n      return null;\n    }\n\n    return (\n      <Box\n        key={`op-${index}`}\n        sx={{\n          my: 2,\n          border: '1px solid',\n          borderColor: 'divider',\n          borderRadius: 1,\n          overflow: 'hidden',\n          backgroundColor: 'action.hover'\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          sx={{\n            display: 'block',\n            p: 1,\n            backgroundColor: 'background.paper',\n            borderBottom: '1px solid',\n            borderColor: 'divider',\n            fontWeight: 'bold'\n          }}\n        >\n          {title}\n        </Typography>\n        <pre style={{ margin: 0, position: 'relative' }}>\n          <code\n            style={{\n              display: 'block',\n              padding: '12px',\n              fontSize: '15px',\n              lineHeight: '1.6',\n              fontFamily: '\"Fira Code\", \"Consolas\", monospace',\n              whiteSpace: 'pre-wrap',\n              wordBreak: 'break-word'\n            }}\n          >\n            {codeContent}\n          </code>\n        </pre>\n        {role === 'assistant' && canRevertFlags[index] && (\n          <Box\n            sx={{\n              p: 1,\n              borderTop: '1px solid',\n              borderColor: 'divider',\n              textAlign: 'right'\n            }}\n          >\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => handleRevertClick(op, index)}\n              startIcon={<ReplayIcon />}\n              disabled={\n                revertStates[index] === 'checking' ||\n                revertStates[index] === 'reverting' ||\n                revertStates[index] === 'disabled'\n              }\n            >\n              {revertStates[index] === 'reverting' ? 'Reverting...' : 'Revert'}\n            </Button>\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  const renderOperationBlocks = () => {\n    if (!operations || operations.length === 0) {\n      return null;\n    }\n    return operations.map(renderIndividualOperation);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: isUser ? 'flex-end' : 'flex-start',\n        mb: 2,\n        gap: 1\n      }}\n    >\n      <Box\n        sx={{\n          maxWidth: '85%',\n          bgcolor: isUser ? 'primary.main' : 'background.paper',\n          color: isUser ? 'primary.contrastText' : 'text.primary',\n          borderRadius: 2,\n          p: 2,\n          boxShadow: theme =>\n            `0 1px 2px ${theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.4)' : 'rgba(0,0,0,0.1)'}`\n        }}\n      >\n        {role === 'assistant' ? (\n          <>\n            {renderSpecialState()}\n            <Box\n              sx={{\n                '& pre': {\n                  position: 'relative',\n                  bgcolor: theme =>\n                    theme.palette.mode === 'dark' ? '#1E1E1E' : '#f5f5f5',\n                  borderRadius: 1,\n                  p: 2,\n                  my: 2,\n                  overflow: 'auto',\n                  boxShadow: theme =>\n                    `inset 0 0 8px ${theme.palette.mode === 'dark' ? 'rgba(0,0,0,0.3)' : 'rgba(0,0,0,0.1)'}`,\n                  border: theme =>\n                    `1px solid ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)'}`\n                },\n                '& code': {\n                  fontSize: '0.9rem',\n                  fontFamily: '\"Fira Code\", \"Consolas\", monospace',\n                  color: theme =>\n                    theme.palette.mode === 'dark' ? '#D4D4D4' : '#333333',\n                  lineHeight: '1.5'\n                },\n                '& p': {\n                  m: 0,\n                  color: 'text.primary',\n                  '&:not(:last-child)': {\n                    mb: 1.5\n                  }\n                },\n                '& p > code': {\n                  bgcolor: theme =>\n                    theme.palette.mode === 'dark'\n                      ? 'rgba(255,255,255,0.1)'\n                      : 'rgba(0,0,0,0.1)',\n                  color: 'text.primary',\n                  px: 1,\n                  py: 0.5,\n                  borderRadius: 1,\n                  fontFamily: '\"Fira Code\", \"Consolas\", monospace'\n                }\n              }}\n            >\n              <ReactMarkdown components={markdownComponents}>\n                {cleanedContent}\n              </ReactMarkdown>\n              {renderOperationBlocks()}\n            </Box>\n          </>\n        ) : (\n          <Typography>{cleanedContent}</Typography>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { Box, Button } from '@mui/material';\nimport {\n  DEFAULT_MODEL_CONFIG,\n  getModelConfig,\n  saveModelConfig\n} from '../config';\nimport { StreamChunk, QueryType, CellOperation } from '../types/stream';\nimport { ChatMessage } from './chat-message';\nimport { ChatInput } from './chat-input';\nimport { ChatHeader } from './chat-header';\nimport { CellService } from '../services/cell-service';\nimport { IMessage, IModelConfig } from '../types/api';\nimport { IChatProps } from '../types/chat';\nimport {\n  extractCellReferences,\n  removeCellOperationTags\n} from '../utils/chatUtils';\nimport { useNotebookOperations } from '../hooks/use-notebook-operations';\nimport { showNotification } from '../hooks/use-show-notification';\nimport { useAgenticLoopManager } from '../hooks/use-agentic-loop-manager';\nimport {\n  streamAgenticAssistant,\n  IAgenticAssistantPayload\n} from '../services/api-service';\nimport { extractNotebookState } from '../utils/notebook-state-extractor';\nimport { useAgenticState } from '../hooks/use-agentic-state';\nimport { extractTextOutputFromCell } from '../utils/cellOutputExtractor';\nimport {\n  JupytPendingOperation,\n  PENDING_OPERATION_METADATA_KEY\n} from '../types/cell-metadata';\nimport {\n  JupytApprovedOperation,\n  APPROVED_OPERATION_METADATA_KEY\n} from '../types/cell-metadata';\nimport { CodeCell, CodeCellModel } from '@jupyterlab/cells';\nimport {\n  injectOrUpdateCellUI,\n  handleApprove,\n  handleReject\n} from '../plugins/cell-toolbar';\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\n\nexport function Chat({\n  notebookPanel,\n  sessionContext\n}: IChatProps): JSX.Element {\n  // Chat state\n  const [messages, setMessages] = useState<IMessage[]>([]);\n  const [input, setInput] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [currentType] = useState<QueryType | null>(null);\n  const [sessionId, setSessionId] = useState(() => generateSessionId());\n  const [hasPendingOperations, setHasPendingOperations] = useState(false);\n\n  // Model configuration state\n  const [modelConfig, setModelConfig] =\n    useState<IModelConfig>(getModelConfig());\n\n  // Refs\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const cellServiceRef = useRef<CellService>(CellService.getInstance());\n\n  // Helper function to generate a random session ID\n  function generateSessionId(): string {\n    return `chat_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      const container = messagesEndRef.current.parentElement;\n      if (container) {\n        container.scrollTo({\n          top: container.scrollHeight,\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, []);\n\n  // Handle model configuration change\n  const handleModelConfigChange = useCallback(\n    (config: IModelConfig) => {\n      setModelConfig(config);\n      saveModelConfig(config);\n      showNotification(\n        `Model updated to ${config.provider} - ${config.model}`,\n        'success'\n      );\n    },\n    [showNotification]\n  );\n\n  useEffect(() => {\n    if (notebookPanel) {\n      cellServiceRef.current.setNotebookPanel(notebookPanel);\n    }\n  }, [notebookPanel]);\n\n  const {\n    copyToNotebook,\n    modifyCell,\n    handleAddCell,\n    handleDeleteCell,\n    handleRevertOperation\n  } = useNotebookOperations({\n    notebookPanel,\n    sessionContext,\n    showNotification\n  });\n\n  // Cell operation executor for agentic loop\n  const executeCellOperation = async (\n    op: CellOperation\n  ): Promise<string | undefined> => {\n    try {\n      if (\n        op.type === 'create_cell' &&\n        op.code !== undefined &&\n        op.cell_index !== undefined\n      ) {\n        await handleAddCell(op.code, op.cell_index, !!op.run_needed);\n        return undefined;\n      } else if (\n        op.type === 'update_cell' &&\n        op.code !== undefined &&\n        op.cell_index !== undefined\n      ) {\n        await modifyCell(op.code, op.cell_index, !!op.run_needed);\n        return undefined;\n      } else if (op.type === 'delete_cell' && op.cell_index !== undefined) {\n        await handleDeleteCell(op.cell_index);\n        return undefined;\n      }\n    } catch (err) {\n      showNotification(\n        `Cell operation failed: ${err instanceof Error ? err.message : 'Unknown error'}`,\n        'error'\n      );\n      return `Error: ${err instanceof Error ? err.message : 'Unknown error'}`;\n    }\n    return undefined;\n  };\n\n  // Agentic state\n  const { plan, setPlan, planStage, setPlanStage, cellOutput, setCellOutput } =\n    useAgenticState();\n\n  // Agentic loop manager\n  const { startAgenticLoop, cancelAgenticLoop, isLooping, revertAllChanges } =\n    useAgenticLoopManager({\n      plan,\n      setPlan,\n      planStage,\n      setPlanStage,\n      cellOutput,\n      setCellOutput,\n      notebookPanel,\n      sessionId,\n      setMessages,\n      onStreamingStateChange: setIsStreaming,\n      executeCellOperation,\n      extractTextOutputFromCell\n    });\n\n  // Conditional rendering for Revert All Changes button\n  const [shouldShowRevertButton, setShouldShowRevertButton] = useState(false);\n\n  // Update shouldShowRevertButton when isLooping or plan changes\n  useEffect(() => {\n    setShouldShowRevertButton(isLooping || !!plan);\n  }, [isLooping, plan]);\n\n  // Function to handle starting a new chat with a fresh session ID\n  const handleNewChat = useCallback(() => {\n    if (isStreaming || isLooping) {\n      return; // Prevent starting new chat while streaming\n    }\n\n    // Reset states\n    setMessages([]);\n    setInput('');\n    setSessionId(generateSessionId());\n\n    // Reset agentic state if needed\n    setPlan('');\n    setPlanStage('');\n    setCellOutput('');\n\n    // Show notification\n    showNotification('Started new chat session', 'success');\n\n    // Scroll to bottom\n    setTimeout(() => scrollToBottom(), 100);\n  }, [\n    isStreaming,\n    isLooping,\n    setPlan,\n    setPlanStage,\n    setCellOutput,\n    showNotification,\n    scrollToBottom\n  ]);\n\n  // Helper function to clean message content\n  const cleanMessageContent = (content: string): string => {\n    // Correct the regex: Use single backslashes for bracket escaping in a regex literal\n    const cleanedOfStatus = content\n      .replace(/\\n?\\[COMPLETION_STATUS:[^\\]]*\\]/gi, '')\n      .trim();\n    // Remove cell operation tags separately\n    return removeCellOperationTags(cleanedOfStatus);\n  };\n\n  useEffect(() => {\n    if (notebookPanel) {\n      cellServiceRef.current.setNotebookPanel(notebookPanel);\n    }\n  }, [notebookPanel]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!input.trim() || isStreaming || !notebookPanel) {\n      return;\n    }\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [\n      ...prev,\n      {\n        role: 'user',\n        content: userMessage,\n        timestamp: Date.now()\n      }\n    ]);\n    setIsStreaming(true);\n\n    // Capture initial notebook state before any changes\n    const initialNotebookState = extractNotebookState(notebookPanel);\n    const notebookState = initialNotebookState;\n    const includeSearch = userMessage.includes('@search');\n    const payload: IAgenticAssistantPayload = {\n      query: userMessage,\n      session_id: sessionId,\n      notebook_state: notebookState,\n      llm_config: modelConfig\n    };\n\n    if (includeSearch) {\n      payload.search = true;\n    }\n\n    let assistantMsgIndex = -1;\n    setMessages(prev => {\n      assistantMsgIndex = prev.length;\n      return [\n        ...prev,\n        {\n          role: 'assistant',\n          content: '',\n          timestamp: Date.now()\n        }\n      ];\n    });\n    scrollToBottom();\n\n    let lastChunk: StreamChunk | undefined = undefined;\n    let fullContent = '';\n    let initialCellOutput: string | null = null;\n    try {\n      for await (const chunk of streamAgenticAssistant(payload)) {\n        lastChunk = chunk;\n        if (chunk.chunk_type !== 'end' && chunk.content) {\n          if (chunk.content.length > 0) {\n            fullContent += chunk.content;\n            setMessages(prev => {\n              // Update only the last assistant message\n              const updated = [...prev];\n              if (updated.length > 0 && updated[assistantMsgIndex]) {\n                updated[assistantMsgIndex] = {\n                  ...updated[assistantMsgIndex],\n                  // Clean the content as it streams\n                  content: cleanMessageContent(fullContent)\n                };\n              }\n              return updated;\n            });\n          }\n        }\n      }\n    } catch (err) {\n      setMessages(prev => {\n        const updated = [...prev];\n        if (updated.length > 0 && updated[assistantMsgIndex]) {\n          updated[assistantMsgIndex] = {\n            ...updated[assistantMsgIndex],\n            content: `Error: ${err instanceof Error ? err.message : 'Unknown error'}`\n          };\n        } else {\n          // Add new error message if placeholder wasn't added correctly\n          updated.push({\n            role: 'assistant',\n            content: `Error: ${err instanceof Error ? err.message : 'Unknown error'}`,\n            timestamp: Date.now()\n          });\n        }\n        return updated;\n      });\n      setIsStreaming(false);\n      return;\n    }\n    setIsStreaming(false);\n\n    // Clean the final message content *before* potentially adding operations\n    setMessages(prev => {\n      const updated = [...prev];\n      const lastMessageIndex = assistantMsgIndex; // Use the saved index\n\n      if (lastMessageIndex >= 0 && updated[lastMessageIndex]) {\n        updated[lastMessageIndex] = {\n          ...updated[lastMessageIndex],\n          content: cleanMessageContent(fullContent) // Clean the content here\n        };\n      }\n      return updated;\n    });\n\n    // If agentic, execute all next_actions before entering the agentic loop\n    let lastExecutedOperationIndex = -1;\n    if (\n      lastChunk &&\n      lastChunk.next_action &&\n      lastChunk.next_action.length > 0 &&\n      lastChunk.completion_status === 'continue'\n    ) {\n      for (let i = 0; i < lastChunk.next_action.length; i++) {\n        const op = lastChunk.next_action[i];\n        await executeCellOperation(op);\n        if (op.run_needed && typeof op.cell_index === 'number') {\n          lastExecutedOperationIndex = i; // Keep track of the last op that needs output checking\n        }\n      }\n\n      // If the last executed operation needed running, wait for its output\n      if (lastExecutedOperationIndex !== -1) {\n        const op = lastChunk.next_action[lastExecutedOperationIndex];\n        await new Promise(resolve => setTimeout(resolve, 100)); // Small delay\n        await (async function waitForCellOutput() {\n          const pos = typeof op.cell_index === 'number' ? op.cell_index : 0;\n          const cell = notebookPanel?.content?.widgets?.[pos];\n          if (!cell) {\n            return;\n          }\n          const hasOutputs = (model: any): boolean => {\n            return (\n              model &&\n              typeof model === 'object' &&\n              'outputs' in model &&\n              model.outputs\n            );\n          };\n          if (hasOutputs(cell.model)) {\n            let resolved = false;\n            const checkOutput = () => {\n              if (hasOutputs(cell.model)) {\n                const output = extractTextOutputFromCell(cell.model as any);\n                if (output && output.length > 0) {\n                  resolved = true;\n                  initialCellOutput = output;\n                }\n              }\n            };\n            const outputChanged = () => {\n              if (!resolved) {\n                checkOutput();\n              }\n            };\n            (cell.model as any).outputs.changed.connect(outputChanged);\n            checkOutput();\n            setTimeout(() => {\n              if (!resolved) {\n                resolved = true;\n                (cell.model as any).outputs.changed.disconnect(outputChanged);\n                initialCellOutput = extractTextOutputFromCell(\n                  cell.model as any\n                );\n              }\n            }, 10000); // 10-second timeout\n          }\n        })();\n      }\n    }\n\n    // If agentic, enter the agentic loop\n    if (lastChunk && lastChunk.completion_status === 'continue') {\n      setCellOutput(initialCellOutput); // Set the initial cell output for the agentic loop\n      await startAgenticLoop({\n        query: userMessage,\n        llmConfig: DEFAULT_MODEL_CONFIG,\n        initialState: initialNotebookState // Pass the initial state we captured before any changes\n      });\n    } else if (lastChunk && lastChunk.chunk_type === 'end') {\n      const operations = lastChunk.next_action;\n      if (operations && operations.length > 0) {\n        const notebook = notebookPanel.content;\n        const model = notebookPanel.model;\n\n        if (!model) {\n          showNotification('Error: Notebook model not available.', 'error');\n          return;\n        }\n\n        for (const op of operations) {\n          const pendingMetadata: JupytPendingOperation = {\n            type: op.type,\n            code: op.code,\n            runNeeded: op.run_needed\n          };\n\n          try {\n            if (\n              op.type === 'create_cell' &&\n              op.cell_index !== undefined &&\n              op.code !== undefined\n            ) {\n              // Insert a placeholder cell FIRST\n              model.sharedModel.insertCell(op.cell_index, {\n                cell_type: 'code',\n                source: ''\n              }); // Insert empty initially\n              const cellWidget = notebook.widgets[op.cell_index];\n              if (cellWidget) {\n                // Now set the metadata on the newly created cell\n                pendingMetadata.originalIndex = op.cell_index;\n                cellWidget.model.sharedModel.setMetadata(\n                  PENDING_OPERATION_METADATA_KEY,\n                  pendingMetadata as any\n                ); // Cast to any\n\n                // Delay UI injection and selection slightly to allow DOM rendering\n                setTimeout(() => {\n                  // Add checks for safety and type narrowing\n                  if (\n                    cellWidget.isAttached &&\n                    cellWidget.node &&\n                    op.cell_index !== undefined\n                  ) {\n                    injectOrUpdateCellUI(cellWidget as CodeCell, notebookPanel);\n                    // Select the newly created cell to ensure UI updates\n                    notebook.activeCellIndex = op.cell_index; // Now type-safe\n                    notebook.scrollToCell(cellWidget);\n                  } else {\n                    console.warn(\n                      `Cell widget at index ${op.cell_index ?? 'unknown'} not ready after delay for UI injection.`\n                    );\n                  }\n                }, 0);\n              } else {\n                console.error(\n                  `Failed to get cell widget after creation at index ${op.cell_index}`\n                );\n                showNotification(\n                  `Error preparing cell creation at index ${op.cell_index + 1}.`,\n                  'error'\n                );\n              }\n            } else if (\n              op.type === 'update_cell' &&\n              op.cell_index !== undefined &&\n              op.code !== undefined\n            ) {\n              const cellWidget = notebook.widgets[op.cell_index];\n              if (cellWidget) {\n                const oldCode = cellWidget.model.sharedModel.source;\n                pendingMetadata.oldCode = oldCode; // Store old code for diff\n                pendingMetadata.originalIndex = op.cell_index;\n                cellWidget.model.sharedModel.setMetadata(\n                  PENDING_OPERATION_METADATA_KEY,\n                  pendingMetadata as any\n                ); // Cast to any\n                injectOrUpdateCellUI(cellWidget as CodeCell, notebookPanel);\n              } else {\n                showNotification(\n                  `Error: Could not find cell ${op.cell_index + 1} to update.`,\n                  'error'\n                );\n              }\n            } else if (\n              op.type === 'delete_cell' &&\n              op.cell_index !== undefined\n            ) {\n              const cellWidget = notebook.widgets[op.cell_index];\n              if (cellWidget) {\n                pendingMetadata.originalIndex = op.cell_index;\n                // For delete, just mark the cell for deletion via metadata\n                cellWidget.model.sharedModel.setMetadata(\n                  PENDING_OPERATION_METADATA_KEY,\n                  pendingMetadata as any\n                ); // Cast to any\n                injectOrUpdateCellUI(cellWidget as CodeCell, notebookPanel);\n              } else {\n                showNotification(\n                  `Error: Could not find cell ${op.cell_index + 1} to delete.`,\n                  'error'\n                );\n              }\n            }\n          } catch (metaError) {\n            console.error('Error setting metadata:', metaError);\n            showNotification(\n              `Failed to set metadata for operation on cell ${op.cell_index !== undefined ? op.cell_index + 1 : 'N/A'}.`,\n              'error'\n            );\n          }\n        }\n        // Optionally, update the assistant message to indicate actions are pending cell approval\n        setMessages(prev => {\n          const updated = [...prev];\n          // Ensure assistantMsgIndex is valid and the message exists\n          if (\n            assistantMsgIndex >= 0 &&\n            assistantMsgIndex < updated.length &&\n            updated[assistantMsgIndex]\n          ) {\n            const currentContent = updated[assistantMsgIndex].content;\n            updated[assistantMsgIndex] = {\n              ...updated[assistantMsgIndex],\n              content:\n                currentContent +\n                '\\n\\n*Code modifications suggested. Please approve or reject them in the notebook cells.*',\n              operations: operations // <-- Add the operations array here\n            };\n          } else {\n            console.warn(\n              'Could not find assistant message to attach operations to. Index:',\n              assistantMsgIndex\n            );\n            // Optionally handle this case, maybe add a new message?\n          }\n          return updated;\n        });\n      }\n    }\n  };\n\n  // --- NEW: Function to check if a specific operation can be reverted ---\n  const checkCanRevert = useCallback(\n    async (operation: CellOperation): Promise<boolean> => {\n      if (!notebookPanel || typeof operation.cell_index !== 'number') {\n        return false;\n      }\n      const notebook = notebookPanel.content;\n      // For creates/updates, check the cell at the original index\n      const cellWidget = notebook.widgets[operation.cell_index];\n      if (cellWidget instanceof CodeCell && cellWidget.model) {\n        const approvedMetadata = cellWidget.model.sharedModel.getMetadata(\n          APPROVED_OPERATION_METADATA_KEY\n        ) as JupytApprovedOperation | undefined;\n        // Can revert if approved metadata exists for this operation type\n        return !!approvedMetadata && approvedMetadata.type === operation.type;\n      }\n      return false;\n    },\n    [notebookPanel]\n  );\n\n  // --- NEW: Handler passed to ChatMessage to trigger revert ---\n  const handleRevertRequest = useCallback(\n    async (operation: CellOperation, cell: CodeCell) => {\n      if (!cell.model) {\n        return;\n      }\n      const model = cell.model as CodeCellModel;\n      const approvedMetadata = model.sharedModel.getMetadata(\n        APPROVED_OPERATION_METADATA_KEY\n      ) as JupytApprovedOperation | undefined;\n\n      if (approvedMetadata && approvedMetadata.type === operation.type) {\n        const success = await handleRevertOperation(cell, approvedMetadata);\n        if (success) {\n          // Clear the metadata AFTER successful revert\n          model.sharedModel.deleteMetadata(APPROVED_OPERATION_METADATA_KEY);\n          // Maybe add a confirmation message?\n        } else {\n          // handleRevertOperation already shows notification on failure\n        }\n      } else {\n        showNotification(\n          'Revert impossible: Cell state changed or metadata missing.',\n          'error'\n        );\n      }\n    },\n    [handleRevertOperation, showNotification]\n  );\n\n  // Add function to check for pending operations\n  const checkPendingOperations = useCallback(() => {\n    if (!notebookPanel?.content) {\n      return false;\n    }\n    const notebook = notebookPanel.content;\n    for (const cell of notebook.widgets) {\n      if (cell instanceof CodeCell && cell.model) {\n        const pendingMetadata = cell.model.sharedModel.getMetadata(\n          PENDING_OPERATION_METADATA_KEY\n        );\n        if (pendingMetadata) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }, [notebookPanel]);\n\n  // Update hasPendingOperations when notebook changes\n  useEffect(() => {\n    if (!notebookPanel) {\n      return;\n    }\n\n    const updatePendingStatus = () => {\n      setHasPendingOperations(checkPendingOperations());\n    };\n\n    // Initial check\n    updatePendingStatus();\n\n    // Use MutationObserver to watch for metadata changes\n    const observer = new MutationObserver(() => {\n      updatePendingStatus();\n    });\n\n    // Observe the notebook for changes\n    observer.observe(notebookPanel.node, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [notebookPanel, checkPendingOperations]);\n\n  // Function to handle approve all\n  const handleApproveAll = useCallback(async () => {\n    if (!notebookPanel?.content) {\n      return;\n    }\n    const notebook = notebookPanel.content;\n\n    // First, collect all cells with pending operations\n    const pendingCells = notebook.widgets\n      .map((cell, index) => ({ cell, index }))\n      .filter(\n        ({ cell }) =>\n          cell instanceof CodeCell &&\n          cell.model?.sharedModel.getMetadata(PENDING_OPERATION_METADATA_KEY)\n      );\n\n    // Sort delete operations to the end to handle them last\n    pendingCells.sort((a, b) => {\n      const aMetadata = (a.cell as CodeCell).model?.sharedModel.getMetadata(\n        PENDING_OPERATION_METADATA_KEY\n      ) as unknown as JupytPendingOperation;\n      const bMetadata = (b.cell as CodeCell).model?.sharedModel.getMetadata(\n        PENDING_OPERATION_METADATA_KEY\n      ) as unknown as JupytPendingOperation;\n      // Put delete operations at the end\n      if (\n        aMetadata.type === 'delete_cell' &&\n        bMetadata.type !== 'delete_cell'\n      ) {\n        return 1;\n      }\n      if (\n        bMetadata.type === 'delete_cell' &&\n        aMetadata.type !== 'delete_cell'\n      ) {\n        return -1;\n      }\n      return 0;\n    });\n\n    // Process operations in order\n    for (const { cell } of pendingCells) {\n      if (cell instanceof CodeCell && cell.model) {\n        const pendingMetadata = cell.model.sharedModel.getMetadata(\n          PENDING_OPERATION_METADATA_KEY\n        ) as JupytPendingOperation | undefined;\n        if (pendingMetadata) {\n          await handleApprove(cell as CodeCell, notebookPanel, pendingMetadata);\n          // Add a small delay to allow the notebook to stabilize\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n    }\n    showNotification('All operations approved successfully', 'success');\n  }, [notebookPanel, showNotification]);\n\n  // Function to handle reject all\n  const handleRejectAll = useCallback(async () => {\n    if (!notebookPanel?.content) {\n      return;\n    }\n    const notebook = notebookPanel.content;\n\n    for (const cell of notebook.widgets) {\n      if (cell instanceof CodeCell && cell.model) {\n        const pendingMetadata = cell.model.sharedModel.getMetadata(\n          PENDING_OPERATION_METADATA_KEY\n        ) as JupytPendingOperation | undefined;\n        if (pendingMetadata) {\n          await handleReject(cell as CodeCell, notebookPanel, pendingMetadata);\n        }\n      }\n    }\n    showNotification('All operations rejected', 'success');\n  }, [notebookPanel, showNotification]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  useEffect(() => {\n    if (isStreaming) {\n      scrollToBottom();\n    }\n  }, [isStreaming, scrollToBottom]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        bgcolor: 'background.default',\n        zIndex: 1000\n      }}\n    >\n      <Box\n        sx={{\n          position: 'sticky',\n          top: 0,\n          zIndex: 1001,\n          bgcolor: 'background.default',\n          borderBottom: '1px solid',\n          borderColor: 'divider',\n          p: 2\n        }}\n      >\n        <ChatHeader\n          isStreaming={isStreaming}\n          currentType={currentType}\n          onNewChat={handleNewChat}\n          onModelConfigChange={handleModelConfigChange}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          px: 3,\n          py: 2\n        }}\n      >\n        {messages.map((message, index) => {\n          const { cellNumbers } = extractCellReferences(\n            message.role === 'user'\n              ? message.content\n              : messages[index - 1]?.content || ''\n          );\n\n          return (\n            <ChatMessage\n              key={index}\n              role={message.role}\n              content={message.content}\n              onCopyCode={copyToNotebook}\n              onExecuteCode={code => copyToNotebook(code, true)}\n              onModifyCell={modifyCell}\n              onAddCell={handleAddCell}\n              onDeleteCell={handleDeleteCell}\n              referencedCells={cellNumbers}\n              operations={message.operations}\n              showNotification={showNotification}\n              onRevertOperation={handleRevertRequest}\n              canRevertOperation={checkCanRevert}\n              notebookPanel={notebookPanel}\n            />\n          );\n        })}\n        <div ref={messagesEndRef} />\n      </Box>\n      {shouldShowRevertButton && (\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, m: 3 }}>\n          <Button\n            variant=\"outlined\"\n            color=\"warning\"\n            onClick={async () => {\n              await revertAllChanges();\n            }}\n          >\n            Revert All Changes\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"warning\"\n            onClick={() => {\n              setShouldShowRevertButton(false);\n            }}\n          >\n            Accept All Changes\n          </Button>\n        </Box>\n      )}\n      {hasPendingOperations && (\n        <Box\n          sx={{\n            position: 'fixed',\n            bottom: 16,\n            right: 16,\n            display: 'flex',\n            gap: 1,\n            zIndex: 1002,\n            bgcolor: 'background.paper',\n            borderRadius: 1,\n            boxShadow: 2,\n            p: 1\n          }}\n        >\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleApproveAll}\n            startIcon={<DoneAllIcon />}\n          >\n            Approve All\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            color=\"error\"\n            onClick={handleRejectAll}\n            startIcon={<ClearAllIcon />}\n          >\n            Reject All\n          </Button>\n        </Box>\n      )}\n      <Box\n        sx={{\n          p: 3,\n          borderTop: '1px solid',\n          borderColor: 'divider',\n          bgcolor: 'background.default'\n        }}\n      >\n        <ChatInput\n          value={input}\n          isStreaming={isStreaming || isLooping}\n          onChange={setInput}\n          onSubmit={handleSubmit}\n          isAgenticLooping={isLooping}\n          onStopAgenticLoop={cancelAgenticLoop}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport { useTheme } from '../theme-provider';\nimport { ThemeMode } from '../theme';\nimport { ModelSelector } from './model-selector';\nimport { getUserFromStorage } from '../config';\nimport { IUser } from '../types/auth';\n\n/**\n * JupytSettings\n * Settings page for Jupyt AI. Contains model selection and appearance/theme settings.\n * User authentication has been moved to the UserProfile component.\n */\nconst JupytSettings: React.FC = () => {\n  const { themeMode, setThemeMode, currentTheme } = useTheme();\n  const [user, setUser] = useState<IUser | null>(null);\n\n  // Initialize user from storage\n  useEffect(() => {\n    const storedUser = getUserFromStorage();\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n\n  // Handle theme change\n  const handleThemeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setThemeMode(event.target.value as ThemeMode);\n  };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 600, margin: '0 auto' }}>\n      <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 600 }}>\n        Jupyt Settings\n      </Typography>\n\n      {/* Model Selection */}\n      <Paper sx={{ p: 2, mb: 3 }} elevation={2}>\n        <Typography variant=\"h6\" sx={{ mb: 1 }}>\n          Model Selection\n        </Typography>\n        {user ? (\n          <ModelSelector />\n        ) : (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel id=\"model-select-label\">Model</InputLabel>\n            <Select\n              labelId=\"model-select-label\"\n              label=\"Model\"\n              value=\"\"\n              disabled\n            >\n              <MenuItem value=\"\">(Login to select models)</MenuItem>\n            </Select>\n          </FormControl>\n        )}\n      </Paper>\n\n      {/* Theme Settings */}\n      <Paper sx={{ p: 2 }} elevation={2}>\n        <Typography variant=\"h6\" sx={{ mb: 1 }}>\n          Appearance & Theme\n        </Typography>\n        <FormControl fullWidth size=\"small\">\n          <InputLabel id=\"theme-select-label\">Theme</InputLabel>\n          <Select\n            labelId=\"theme-select-label\"\n            label=\"Theme\"\n            value={themeMode}\n            onChange={handleThemeChange as any}\n          >\n            <MenuItem value=\"light\">Light</MenuItem>\n            <MenuItem value=\"dark\">Dark</MenuItem>\n            <MenuItem value=\"system\">\n              System (\n              {currentTheme.charAt(0).toUpperCase() + currentTheme.slice(1)})\n            </MenuItem>\n          </Select>\n        </FormControl>\n        <Typography variant=\"body2\" sx={{ mt: 1, color: 'text.secondary' }}>\n          Current theme:{' '}\n          {currentTheme.charAt(0).toUpperCase() + currentTheme.slice(1)}\n        </Typography>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default JupytSettings;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  Typography,\n  CircularProgress\n} from '@mui/material';\nimport { AuthService } from '../services/auth-service';\nimport { getApiKey, getModelConfig, saveModelConfig } from '../config';\nimport { IModelConfig } from '../types/api';\n\ninterface IModelSelectorProps {\n  onChange?: (config: IModelConfig) => void;\n}\n\nexport function ModelSelector({ onChange }: IModelSelectorProps): JSX.Element {\n  const [availableModels, setAvailableModels] = useState<{\n    [provider: string]: string[];\n  }>({});\n  const [allModels, setAllModels] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [modelConfig, setModelConfig] =\n    useState<IModelConfig>(getModelConfig());\n\n  useEffect(() => {\n    const fetchModels = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const apiKey = getApiKey();\n        if (!apiKey) {\n          setError('API key not found. Please log in.');\n          setLoading(false);\n          return;\n        }\n\n        const authService = AuthService.getInstance();\n        const response = await authService.getAvailableModels(apiKey);\n        setAvailableModels(response.available_models);\n\n        // Combine all models from different providers into a single array\n        const combinedModels: string[] = [];\n        Object.entries(response.available_models).forEach(\n          ([provider, models]) => {\n            models.forEach(model => {\n              combinedModels.push(model);\n            });\n          }\n        );\n        setAllModels(combinedModels);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch models');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchModels();\n  }, []);\n\n  const handleModelChange = (event: SelectChangeEvent) => {\n    const selectedModel = event.target.value;\n\n    // Find which provider this model belongs to\n    let selectedProvider = '';\n    Object.entries(availableModels).forEach(([provider, models]) => {\n      if (models.includes(selectedModel)) {\n        selectedProvider = provider;\n      }\n    });\n\n    const newConfig = {\n      ...modelConfig,\n      provider: selectedProvider,\n      model: selectedModel\n    };\n\n    console.log('Selected model:', selectedModel);\n    setModelConfig(newConfig);\n    saveModelConfig(newConfig);\n    onChange?.(newConfig);\n  };\n\n  if (loading) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 2\n        }}\n      >\n        <CircularProgress size={24} sx={{ mr: 1 }} />\n        <Typography variant=\"body2\">Loading models...</Typography>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"body2\" color=\"error\">\n          {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2, p: 2 }}>\n      <FormControl fullWidth size=\"small\">\n        <InputLabel id=\"model-select-label\">Model</InputLabel>\n        <Select\n          labelId=\"model-select-label\"\n          id=\"model-select\"\n          value={modelConfig.model}\n          label=\"Model\"\n          onChange={handleModelChange}\n        >\n          {allModels.map(model => (\n            <MenuItem key={model} value={model}>\n              {model}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  TextField,\n  Alert,\n  CircularProgress\n} from '@mui/material';\nimport { AuthService } from '../services/auth-service';\nimport {\n  getUserFromStorage,\n  clearUserData,\n  getApiKey,\n  saveUserToStorage\n} from '../config';\nimport {\n  IUser,\n  IUserResponse,\n  ILoginRequest,\n  IRegisterRequest\n} from '../types/auth';\n\n/**\n * UserProfile\n * Displays user profile information, including request usage and account details.\n * Allows login if not authenticated.\n */\nconst UserProfile: React.FC = () => {\n  // Authentication state\n  const [user, setUser] = useState<IUser | null>(null);\n  const [userProfile, setUserProfile] = useState<IUserResponse | null>(null);\n  const [authMode, setAuthMode] = useState<'login' | 'register'>('login');\n  const [loginData, setLoginData] = useState<ILoginRequest>({\n    username: '',\n    password: ''\n  });\n  const [registerData, setRegisterData] = useState<IRegisterRequest>({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Initialize user from storage and fetch profile data\n  useEffect(() => {\n    const storedUser = getUserFromStorage();\n    if (storedUser) {\n      setUser(storedUser);\n      fetchUserProfile();\n    }\n  }, []);\n\n  // Fetch user profile data from API\n  const fetchUserProfile = async () => {\n    const apiKey = getApiKey();\n    if (!apiKey) {\n      setError('No API key found. Please log in again.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const authService = AuthService.getInstance();\n      console.log('Fetching user profile with API key length:', apiKey.length);\n      console.log('API base URL:', authService.getBaseUrl());\n\n      const profileData = await authService.getCurrentUser(apiKey);\n      console.log('Profile data received:', profileData);\n      setUserProfile(profileData);\n      setLoading(false);\n    } catch (err) {\n      console.error('User profile fetch error:', err);\n      let errorMessage = 'Failed to fetch user profile';\n\n      if (err instanceof Error) {\n        errorMessage = `${errorMessage}: ${err.message}`;\n      } else if (typeof err === 'string') {\n        errorMessage = err;\n      }\n\n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  // Handle login\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n\n    try {\n      const authService = AuthService.getInstance();\n      const response = await authService.login(loginData);\n\n      // Create user object and save to storage\n      const newUser: IUser = {\n        user_id: '', // API doesn't return this in login response\n        name: '', // API doesn't return this in login response\n        email: loginData.username,\n        api_key: response.api_key\n      };\n\n      // Save user to storage\n      saveUserToStorage(newUser);\n\n      // Update local state\n      setUser(newUser);\n      setLoginData({ username: '', password: '' });\n\n      // Fetch user profile\n      await fetchUserProfile();\n\n      setLoading(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n      setLoading(false);\n    }\n  };\n\n  // Handle register\n  const handleRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n\n    try {\n      const authService = AuthService.getInstance();\n      const response = await authService.register(registerData);\n\n      // Create user object\n      const newUser: IUser = {\n        user_id: response.user_id,\n        name: registerData.name,\n        email: registerData.email,\n        api_key: response.api_key\n      };\n\n      // Save user to storage\n      saveUserToStorage(newUser);\n\n      // Update local state\n      setUser(newUser);\n      setRegisterData({ name: '', email: '', password: '' });\n\n      // Fetch user profile\n      await fetchUserProfile();\n\n      setLoading(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Registration failed');\n      setLoading(false);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    clearUserData();\n    setUser(null);\n    setUserProfile(null);\n    setError(null);\n  };\n\n  // Handle form input changes\n  const handleLoginChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setLoginData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleRegisterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setRegisterData(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Switch between login and register forms\n  const toggleAuthMode = () => {\n    setAuthMode(prev => (prev === 'login' ? 'register' : 'login'));\n    setError(null);\n  };\n\n  // Render usage bar\n  const renderUsageBar = () => {\n    if (!userProfile) {\n      return null;\n    }\n\n    const usagePercentage = Math.min(\n      Math.round((userProfile.request_count / userProfile.max_requests) * 100),\n      100\n    );\n\n    return (\n      <Box sx={{ mt: 2 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            API Usage\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {userProfile.request_count} / {userProfile.max_requests} requests\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            width: '100%',\n            height: 8,\n            bgcolor: 'grey.200',\n            borderRadius: 1,\n            overflow: 'hidden'\n          }}\n        >\n          <Box\n            sx={{\n              width: `${usagePercentage}%`,\n              height: '100%',\n              bgcolor: usagePercentage > 90 ? 'error.main' : 'primary.main',\n              transition: 'width 0.5s ease-in-out'\n            }}\n          />\n        </Box>\n      </Box>\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 600, margin: '0 auto' }}>\n      <Typography variant=\"h4\" sx={{ mb: 2, fontWeight: 600 }}>\n        User Profile\n      </Typography>\n\n      <Paper sx={{ p: 2 }} elevation={2}>\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n            <CircularProgress size={40} />\n          </Box>\n        )}\n\n        {user && userProfile && !loading ? (\n          // Logged in user with profile data\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Account Information\n            </Typography>\n\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={userProfile.email || user.email}\n              disabled\n              fullWidth\n            />\n\n            {userProfile.name && (\n              <TextField\n                label=\"Name\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={userProfile.name}\n                disabled\n                fullWidth\n              />\n            )}\n\n            {renderUsageBar()}\n\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleLogout}\n              disabled={loading}\n              sx={{ mt: 1 }}\n            >\n              Logout\n            </Button>\n          </Box>\n        ) : user && !userProfile && !loading ? (\n          // Logged in but no profile data yet\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Typography variant=\"body1\">\n              Loading profile information...\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={fetchUserProfile}\n            >\n              Refresh Profile\n            </Button>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Box>\n        ) : !loading ? (\n          // Not logged in\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            {authMode === 'login' ? (\n              // Login form\n              <form onSubmit={handleLogin}>\n                <TextField\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"username\"\n                  type=\"email\"\n                  value={loginData.username}\n                  onChange={handleLoginChange}\n                  required\n                  disabled={loading}\n                />\n                <TextField\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={loginData.password}\n                  onChange={handleLoginChange}\n                  required\n                  disabled={loading}\n                />\n                <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={loading}\n                  >\n                    Login\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={toggleAuthMode}\n                    disabled={loading}\n                  >\n                    Sign Up Instead\n                  </Button>\n                </Box>\n              </form>\n            ) : (\n              // Register form\n              <form onSubmit={handleRegister}>\n                <TextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"name\"\n                  value={registerData.name}\n                  onChange={handleRegisterChange}\n                  required\n                  disabled={loading}\n                />\n                <TextField\n                  label=\"Email\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={registerData.email}\n                  onChange={handleRegisterChange}\n                  required\n                  disabled={loading}\n                />\n                <TextField\n                  label=\"Password\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={registerData.password}\n                  onChange={handleRegisterChange}\n                  required\n                  disabled={loading}\n                />\n                <Box sx={{ display: 'flex', gap: 1, mt: 2 }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={loading}\n                  >\n                    Sign Up\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={toggleAuthMode}\n                    disabled={loading}\n                  >\n                    Login Instead\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Box>\n        ) : null}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default UserProfile;\n","import { IApiConfig, IModelConfig } from './types/api';\nimport { IUser } from './types/auth';\n\n// Base URL for API\nexport const API_BASE_URL = 'https://juno-242959672448.us-central1.run.app';\n// Default API config without authentication\nexport const API_CONFIG: IApiConfig = {\n  baseUrl: API_BASE_URL,\n  apiKey: '' // Will be populated from user authentication\n};\n\n// Initialize API key from localStorage when module is loaded\n(function initializeApiKey() {\n  // Only run in browser environment with localStorage available\n  if (typeof localStorage !== 'undefined') {\n    const storedApiKey = localStorage.getItem('jupyt_api_key');\n    if (storedApiKey) {\n      API_CONFIG.apiKey = storedApiKey;\n      console.log('API key loaded from storage');\n    }\n  }\n})();\n\n// Default model configuration\nexport const DEFAULT_MODEL_CONFIG: IModelConfig = {\n  provider: 'openai',\n  model: 'gpt-4.1',\n  temperature: 0.2,\n  stream: true\n};\n\n// Local storage keys\nconst USER_STORAGE_KEY = 'jupyt_user';\nconst API_KEY_STORAGE_KEY = 'jupyt_api_key';\nconst MODEL_CONFIG_STORAGE_KEY = 'jupyt_model_config';\n\n// User state management\nexport function saveUserToStorage(user: IUser): void {\n  localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(user));\n  // Update API key in the config\n  updateApiKey(user.api_key);\n}\n\nexport function getUserFromStorage(): IUser | null {\n  const userJson = localStorage.getItem(USER_STORAGE_KEY);\n  if (!userJson) {\n    return null;\n  }\n  try {\n    return JSON.parse(userJson);\n  } catch (e) {\n    console.error('Failed to parse user from storage', e);\n    return null;\n  }\n}\n\nexport function updateApiKey(apiKey: string): void {\n  localStorage.setItem(API_KEY_STORAGE_KEY, apiKey);\n  API_CONFIG.apiKey = apiKey;\n}\n\nexport function getApiKey(): string | null {\n  return localStorage.getItem(API_KEY_STORAGE_KEY);\n}\n\nexport function clearUserData(): void {\n  localStorage.removeItem(USER_STORAGE_KEY);\n  localStorage.removeItem(API_KEY_STORAGE_KEY);\n  API_CONFIG.apiKey = '';\n}\n\n// Model configuration management\nexport function saveModelConfig(config: IModelConfig): void {\n  // Validate the model configuration before saving\n  if (\n    !config.model ||\n    typeof config.model !== 'string' ||\n    config.model.trim() === ''\n  ) {\n    console.warn('Attempted to save invalid model configuration');\n    return;\n  }\n\n  // Ensure we're storing the exact model string as selected\n  console.log('Saving model configuration:', config.model);\n  localStorage.setItem(MODEL_CONFIG_STORAGE_KEY, JSON.stringify(config));\n}\n\nexport function getModelConfig(): IModelConfig {\n  const configJson = localStorage.getItem(MODEL_CONFIG_STORAGE_KEY);\n  if (!configJson) {\n    return DEFAULT_MODEL_CONFIG;\n  }\n  try {\n    // Parse stored configuration and ensure model is valid\n    const config = JSON.parse(configJson) as IModelConfig;\n\n    // Verify that the model is a non-empty string\n    if (\n      !config.model ||\n      typeof config.model !== 'string' ||\n      config.model.trim() === ''\n    ) {\n      console.warn('Invalid model in stored config, using default model');\n      return DEFAULT_MODEL_CONFIG;\n    }\n\n    return config;\n  } catch (e) {\n    console.error('Failed to parse model config from storage', e);\n    return DEFAULT_MODEL_CONFIG;\n  }\n}\n","import { useRef, useState } from 'react';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { IModelConfig, IMessage } from '../types/api';\nimport { CellOperation, StreamChunk } from '../types/stream';\nimport { extractNotebookState } from '../utils/notebook-state-extractor';\nimport {\n  streamAgenticAssistant,\n  IAgenticAssistantPayload\n} from '../services/api-service';\nimport { removeCellOperationTags } from '../utils/chatUtils';\n\n// Assuming NotebookState is implicitly defined by extractNotebookState's return type\n// If a specific type exists, it should be imported, e.g.:\n// import { NotebookState } from '../types/notebook';\ntype NotebookState = ReturnType<typeof extractNotebookState>;\n\ninterface IUseAgenticLoopManagerArgs {\n  plan: string | null;\n  setPlan: (plan: string | null) => void;\n  planStage: string | null;\n  setPlanStage: (stage: string | null) => void;\n  cellOutput: string | null;\n  setCellOutput: (output: string | null) => void;\n  notebookPanel: NotebookPanel | undefined;\n  sessionId: string;\n  setMessages: React.Dispatch<React.SetStateAction<IMessage[]>>;\n  onStreamingStateChange?: (isStreaming: boolean) => void;\n  executeCellOperation: (op: CellOperation) => Promise<string | undefined>;\n  extractTextOutputFromCell: (cell: any) => string;\n}\n\n/**\n * React hook to manage the agentic loop for the Jupyt AI assistant.\n * Handles multi-step plans, cell execution, and streaming chat updates.\n * Ensures all streamed content for a single step is appended to a single chat bubble.\n */\nexport function useAgenticLoopManager(args: IUseAgenticLoopManagerArgs) {\n  const isLoopingRef = useRef(false);\n  const [isLooping, setIsLooping] = useState(false);\n  const initialNotebookStateRef = useRef<NotebookState | null>(null);\n\n  // Helper function to clean message content within the agentic loop\n  const cleanAgenticContent = (content: string): string => {\n    // Replace [COMPLETION_STATUS:...] with a newline\n    const cleanedOfStatus = content\n      .replace(/\\[COMPLETION_STATUS:[^\\]]*\\]/gi, '\\n')\n      .trim();\n    // Remove <cell_operation> tags\n    return removeCellOperationTags(cleanedOfStatus);\n  };\n\n  // Helper to wait for cell output with timeout\n  async function waitForCellOutput(\n    notebookPanel: NotebookPanel | undefined,\n    cell_index: number,\n    extractTextOutputFromCell: (cell: any) => string,\n    timeoutMs: number\n  ) {\n    return new Promise<string>(resolve => {\n      const cell = notebookPanel?.content?.widgets?.[cell_index];\n      if (!cell) {\n        return resolve('');\n      }\n      let resolved = false;\n\n      const hasOutputs = (model: any): boolean => {\n        return (\n          model &&\n          typeof model === 'object' &&\n          'outputs' in model &&\n          model.outputs\n        );\n      };\n\n      const checkOutput = () => {\n        if (hasOutputs(cell.model)) {\n          const output = extractTextOutputFromCell(cell.model as any);\n          if (output && output.length > 0) {\n            resolved = true;\n            resolve(output);\n          }\n        }\n      };\n\n      // Listen for output changes\n      const outputChanged = () => {\n        if (!resolved) {\n          checkOutput();\n        }\n      };\n      if (hasOutputs(cell.model)) {\n        (cell.model as any).outputs.changed.connect(outputChanged);\n      }\n\n      // Initial check\n      checkOutput();\n\n      // Timeout fallback\n      setTimeout(() => {\n        if (!resolved) {\n          resolved = true;\n          if (hasOutputs(cell.model)) {\n            (cell.model as any).outputs.changed.disconnect(outputChanged);\n            resolve(extractTextOutputFromCell(cell.model as any));\n          } else {\n            resolve('');\n          }\n        }\n      }, timeoutMs);\n    });\n  }\n\n  const startAgenticLoop = async ({\n    query,\n    llmConfig,\n    initialState\n  }: {\n    query: string;\n    llmConfig: IModelConfig;\n    initialState?: NotebookState;\n  }) => {\n    const {\n      plan,\n      setPlan,\n      planStage,\n      setPlanStage,\n      cellOutput,\n      setCellOutput,\n      notebookPanel,\n      sessionId,\n      setMessages,\n      onStreamingStateChange,\n      executeCellOperation,\n      extractTextOutputFromCell\n    } = args;\n\n    // Use provided initial state or capture current state\n    if (initialState) {\n      initialNotebookStateRef.current = initialState;\n    } else if (notebookPanel) {\n      try {\n        initialNotebookStateRef.current = extractNotebookState(notebookPanel);\n      } catch (e) {\n        console.error(\n          '[AgenticLoop] Failed to extract initial notebook state:',\n          e\n        );\n        initialNotebookStateRef.current = null;\n      }\n    } else {\n      initialNotebookStateRef.current = null;\n    }\n\n    isLoopingRef.current = true;\n    setIsLooping(true);\n    let currentPlan = plan;\n    let currentPlanStage = planStage;\n    let currentCellOutput = cellOutput;\n    let completionStatus: string | undefined = undefined;\n    let first = true;\n    while (isLoopingRef.current && (first || completionStatus === 'continue')) {\n      first = false;\n      const notebookState = extractNotebookState(notebookPanel);\n      const payload: IAgenticAssistantPayload = {\n        query,\n        session_id: sessionId,\n        notebook_state: notebookState,\n        llm_config: llmConfig,\n        plan: currentPlan || undefined,\n        plan_stage: currentPlanStage || undefined,\n        cell_output: currentCellOutput || undefined\n      };\n      if (onStreamingStateChange) {\n        onStreamingStateChange(true);\n      }\n      // Add a new assistant message and update its content as we stream\n      let assistantMsgIndex = -1;\n      setMessages(prev => {\n        assistantMsgIndex = prev.length;\n        return [\n          ...prev,\n          {\n            role: 'assistant',\n            content: '',\n            timestamp: Date.now()\n          }\n        ];\n      });\n      let lastChunk: StreamChunk | undefined = undefined;\n      let fullContent = '';\n      try {\n        for await (const chunk of streamAgenticAssistant(payload)) {\n          lastChunk = chunk;\n          if (chunk.chunk_type !== 'end' && chunk.content) {\n            fullContent += chunk.content;\n            setMessages(prev => {\n              const updated = [...prev];\n              if (updated.length > 0 && updated[assistantMsgIndex]) {\n                updated[assistantMsgIndex] = {\n                  ...updated[assistantMsgIndex],\n                  // Clean the content as it streams within the agentic loop\n                  content: cleanAgenticContent(fullContent)\n                };\n              }\n              return updated;\n            });\n          }\n        }\n      } catch (err) {\n        setMessages(prev => [\n          ...prev,\n          {\n            role: 'assistant',\n            content: `Error: ${err instanceof Error ? err.message : 'Unknown error'}`,\n            timestamp: Date.now()\n          }\n        ]);\n        break;\n      } finally {\n        if (onStreamingStateChange) {\n          onStreamingStateChange(false);\n        }\n      }\n      if (!lastChunk) {\n        break;\n      }\n      // Print the end chunk for debugging\n      console.log('[AgenticLoop] Received end chunk:', lastChunk);\n\n      // Function to normalize operation types (internal helper)\n      const normalizeOperation = (op: any) => {\n        if (op.operation === 'update') {\n          return { ...op, type: 'update_cell' };\n        }\n        if (op.operation === 'create') {\n          return { ...op, type: 'create_cell' };\n        }\n        if (op.operation === 'delete') {\n          return { ...op, type: 'delete_cell' };\n        }\n        return op;\n      };\n      // Extract operations *before* potential execution\n      const operations = lastChunk.next_action\n        ? lastChunk.next_action.map(normalizeOperation)\n        : [];\n\n      // Update the final message content *and* add operations\n      setMessages(prev => {\n        const updated = [...prev];\n        if (updated.length > 0 && updated[assistantMsgIndex]) {\n          updated[assistantMsgIndex] = {\n            ...updated[assistantMsgIndex],\n            content: cleanAgenticContent(fullContent), // Ensure final content is clean\n            operations: operations.length > 0 ? operations : undefined // Add operations\n          };\n        }\n        return updated;\n      });\n\n      // Extract plan, plan_stage, completion_status\n      if (lastChunk.plan) {\n        setPlan(lastChunk.plan);\n      }\n      if (lastChunk.plan_stage) {\n        setPlanStage(lastChunk.plan_stage);\n      }\n      currentPlan = lastChunk.plan || currentPlan;\n      currentPlanStage = lastChunk.plan_stage || currentPlanStage;\n      completionStatus = lastChunk.completion_status || undefined;\n\n      // Debug: Print next_action array\n      if (lastChunk.next_action) {\n        console.log('[AgenticLoop] next_action array:', lastChunk.next_action);\n      }\n\n      // If cell operations are required, execute them and get the output of the last one needing execution\n      let output = '';\n      let lastExecutedOperationIndex = -1; // Index of the last operation that required running\n      if (operations && operations.length > 0) {\n        // Use the extracted operations variable\n        for (let i = 0; i < operations.length; i++) {\n          const op = operations[i]; // Use the extracted operations variable\n          await executeCellOperation(op);\n          if (op.run_needed && typeof op.cell_index === 'number') {\n            lastExecutedOperationIndex = i; // Track the last operation that needs output check\n          }\n        }\n\n        // Wait for the output of the *last* operation that needed to be run\n        if (lastExecutedOperationIndex !== -1) {\n          const lastOpToRun = operations[lastExecutedOperationIndex];\n          // Ensure cell_index is valid before waiting\n          if (typeof lastOpToRun.cell_index === 'number') {\n            output = await waitForCellOutput(\n              notebookPanel,\n              lastOpToRun.cell_index,\n              extractTextOutputFromCell,\n              10000\n            );\n          }\n        }\n      }\n\n      // If error output was explicitly provided in the chunk, use it (overwrites executed output)\n      if (lastChunk.cell_output) {\n        output = lastChunk.cell_output;\n      }\n\n      setCellOutput(output);\n      currentCellOutput = output;\n\n      setMessages(prev => {\n        const updated = [...prev];\n        if (updated.length > 0 && updated[assistantMsgIndex]) {\n          updated[assistantMsgIndex] = {\n            ...updated[assistantMsgIndex],\n            content: cleanAgenticContent(fullContent)\n          };\n        }\n        return updated;\n      });\n    }\n    isLoopingRef.current = false;\n    setIsLooping(false);\n  };\n\n  const cancelAgenticLoop = () => {\n    isLoopingRef.current = false;\n    setIsLooping(false);\n  };\n\n  const revertAllChanges = async () => {\n    // stop the loop if it's running\n    if (isLoopingRef.current) {\n      cancelAgenticLoop();\n    }\n\n    if (!initialNotebookStateRef.current || !args.notebookPanel) {\n      console.warn(\n        '[AgenticLoop] Cannot revert: initial state or notebook panel not available.'\n      );\n      args.setMessages(prev => [\n        ...prev,\n        {\n          role: 'assistant',\n          content:\n            'Cannot revert: initial notebook state was not saved or panel is not available.',\n          timestamp: Date.now()\n        }\n      ]);\n      return;\n    }\n\n    if (isLoopingRef.current) {\n      cancelAgenticLoop(); // Stop any ongoing loop first\n    }\n\n    const { cells: initialCells } = initialNotebookStateRef.current;\n    const currentNotebookPanel = args.notebookPanel;\n\n    args.setMessages(prev => [\n      ...prev,\n      {\n        role: 'assistant',\n        content: 'Attempting to revert changes...',\n        timestamp: Date.now()\n      }\n    ]);\n\n    try {\n      const model = currentNotebookPanel.content.model;\n      if (!model) {\n        console.error('[AgenticLoop] Revert failed: Notebook model not found.');\n        args.setMessages(prev => {\n          const updated = [...prev];\n          if (\n            updated.length > 0 &&\n            updated[updated.length - 1].content.startsWith(\n              'Attempting to revert'\n            )\n          ) {\n            updated[updated.length - 1].content =\n              'Revert failed: Notebook model not found.';\n          }\n          return updated;\n        });\n        return;\n      }\n\n      // Get current cells for comparison\n      const currentCells = currentNotebookPanel.content.widgets;\n\n      // Track cells that need to be reverted\n      const cellsToRevert: { index: number; operation: 'delete' | 'update' }[] =\n        [];\n\n      // Compare current cells with initial cells\n      for (let i = 0; i < currentCells.length; i++) {\n        const currentCell = currentCells[i];\n        const initialCell = initialCells[i];\n\n        // If cell exists in initial state but content is different, mark for update\n        if (\n          initialCell &&\n          currentCell.model.toJSON().source !== initialCell.source\n        ) {\n          cellsToRevert.push({ index: i, operation: 'update' });\n        }\n        // If cell doesn't exist in initial state, mark for deletion\n        else if (!initialCell) {\n          cellsToRevert.push({ index: i, operation: 'delete' });\n        }\n      }\n\n      // Process deletions first (from bottom to top to maintain indices)\n      for (const cell of cellsToRevert\n        .filter(cell => cell.operation === 'delete')\n        .sort((a, b) => b.index - a.index)) {\n        await args.executeCellOperation({\n          type: 'delete_cell',\n          cell_index: cell.index\n        });\n      }\n\n      // Then process updates\n      for (const cell of cellsToRevert\n        .filter(cell => cell.operation === 'update')\n        .sort((a, b) => b.index - a.index)) {\n        const initialCell = initialCells[cell.index];\n        if (initialCell) {\n          await args.executeCellOperation({\n            type: 'update_cell',\n            cell_index: cell.index,\n            code: initialCell.source\n          });\n        }\n      }\n\n      // Run all cells to clear outputs\n      for (let i = 0; i < currentCells.length; i++) {\n        const cellSource = currentCells[i].model.toJSON().source;\n        await args.executeCellOperation({\n          type: 'update_cell',\n          cell_index: i,\n          code: Array.isArray(cellSource) ? cellSource.join('\\n') : cellSource,\n          run_needed: true\n        });\n      }\n\n      args.setPlan(null);\n      args.setPlanStage(null);\n      args.setCellOutput(null);\n      console.log('[AgenticLoop] Changes reverted successfully.');\n      args.setMessages(prev => {\n        const updated = [...prev];\n        if (\n          updated.length > 0 &&\n          updated[updated.length - 1].content.startsWith('Attempting to revert')\n        ) {\n          updated[updated.length - 1].content =\n            'Changes reverted successfully.';\n        } else {\n          return [\n            ...prev,\n            {\n              role: 'assistant',\n              content: 'Changes reverted successfully.',\n              timestamp: Date.now()\n            }\n          ];\n        }\n        return updated;\n      });\n    } catch (error) {\n      console.error('[AgenticLoop] Error during revert:', error);\n      args.setMessages(prev => [\n        ...prev,\n        {\n          role: 'assistant',\n          content: `Failed to revert changes: ${error instanceof Error ? error.message : String(error)}`,\n          timestamp: Date.now()\n        }\n      ]);\n    } finally {\n      initialNotebookStateRef.current = null; // Clear the stored state after attempt\n    }\n  };\n\n  return { startAgenticLoop, cancelAgenticLoop, isLooping, revertAllChanges };\n}\n","import { useState } from 'react';\n\nexport function useAgenticState() {\n  const [plan, setPlan] = useState<string | null>(null);\n  const [planStage, setPlanStage] = useState<string | null>(null);\n  const [cellOutput, setCellOutput] = useState<string | null>(null);\n\n  return {\n    plan,\n    setPlan,\n    planStage,\n    setPlanStage,\n    cellOutput,\n    setCellOutput\n  };\n}\n","import { NotebookActions, NotebookPanel } from '@jupyterlab/notebook';\nimport { CodeCell, CodeCellModel } from '@jupyterlab/cells';\nimport { IChatProps } from '../types/chat';\nimport { stripCodeBlockMarkers } from '../utils/chatUtils';\nimport { JupytApprovedOperation } from '../types/cell-metadata';\n\nexport function useNotebookOperations({\n  notebookPanel,\n  sessionContext,\n  showNotification\n}: {\n  notebookPanel?: NotebookPanel;\n  sessionContext?: IChatProps['sessionContext'];\n  showNotification: (message: string, type: 'success' | 'error') => void;\n}) {\n  // Copy code to a new cell and optionally execute\n  const copyToNotebook = async (\n    code: string,\n    shouldExecute = false\n  ): Promise<void> => {\n    if (!notebookPanel?.model || !sessionContext) {\n      showNotification(\n        'No notebook is open. Please open a notebook first.',\n        'error'\n      );\n      return;\n    }\n    try {\n      const notebook = notebookPanel.content;\n      const model = notebookPanel.model;\n      if (!model || !notebook || !notebook.model) {\n        showNotification('Error: Could not access notebook content.', 'error');\n        return;\n      }\n      const activeCellIndex = notebook.activeCellIndex;\n      const newCellIndex = activeCellIndex + 1;\n      model.sharedModel.insertCell(newCellIndex, {\n        cell_type: 'code',\n        source: stripCodeBlockMarkers(code),\n        metadata: {},\n        outputs: []\n      });\n      notebook.activeCellIndex = newCellIndex;\n      if (shouldExecute) {\n        await sessionContext.ready;\n        await NotebookActions.run(notebook, sessionContext);\n      }\n      const activeCell = notebook.activeCell;\n      if (activeCell) {\n        notebook.scrollToCell(activeCell);\n      }\n      showNotification(\n        shouldExecute\n          ? 'Code executed in notebook.'\n          : 'Code copied to notebook.',\n        'success'\n      );\n    } catch (error) {\n      showNotification(\n        `Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'error'\n      );\n    }\n  };\n\n  // Modify an existing cell\n  const modifyCell = async (\n    code: string,\n    cell_index: number,\n    run_needed?: boolean\n  ): Promise<void> => {\n    if (!notebookPanel?.model) {\n      showNotification(\n        'No notebook is open. Please open a notebook first.',\n        'error'\n      );\n      return;\n    }\n    try {\n      const notebook = notebookPanel.content;\n      if (cell_index < 0 || cell_index >= notebook.widgets.length) {\n        showNotification(`Invalid cell index ${cell_index + 1}`, 'error');\n        return;\n      }\n      const cell = notebook.widgets[cell_index];\n      const cleanCode = stripCodeBlockMarkers(code);\n      cell.model.sharedModel.setSource(cleanCode);\n      if (run_needed) {\n        await sessionContext?.ready;\n        notebook.activeCellIndex = cell_index;\n        await NotebookActions.run(notebook, sessionContext!);\n      }\n      showNotification(\n        `Cell ${cell_index + 1} updated successfully${run_needed ? ' and executed' : ''}`,\n        'success'\n      );\n    } catch (error) {\n      showNotification(\n        `Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'error'\n      );\n    }\n  };\n\n  // Add a new cell at a given position\n  const handleAddCell = async (\n    code: string,\n    cell_index: number,\n    run_needed: boolean\n  ): Promise<void> => {\n    if (!notebookPanel?.model) {\n      showNotification(\n        'No notebook is open. Please open a notebook first.',\n        'error'\n      );\n      return;\n    }\n    try {\n      const notebook = notebookPanel.content;\n      const model = notebookPanel.model;\n      if (!model || !notebook || !notebook.model) {\n        showNotification('Error: Could not access notebook content.', 'error');\n        return;\n      }\n      if (cell_index < 0 || cell_index > notebook.widgets.length) {\n        showNotification(`Invalid cell index ${cell_index + 1}`, 'error');\n        return;\n      }\n      const cleanCode = stripCodeBlockMarkers(code);\n      model.sharedModel.insertCell(cell_index, {\n        cell_type: 'code',\n        source: cleanCode,\n        metadata: {},\n        outputs: []\n      });\n      notebook.activeCellIndex = cell_index;\n      if (run_needed) {\n        await sessionContext?.ready;\n        await NotebookActions.run(notebook, sessionContext!);\n      }\n      const activeCell = notebook.activeCell;\n      if (activeCell) {\n        notebook.scrollToCell(activeCell);\n      }\n      showNotification(\n        run_needed\n          ? `Code executed at cell index ${cell_index + 1}.`\n          : `Code added at cell index ${cell_index + 1}.`,\n        'success'\n      );\n    } catch (error) {\n      showNotification(\n        `Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'error'\n      );\n    }\n  };\n\n  // Delete a cell at a given position\n  const handleDeleteCell = async (cell_index: number): Promise<void> => {\n    if (!notebookPanel?.model) {\n      showNotification(\n        'No notebook is open. Please open a notebook first.',\n        'error'\n      );\n      return;\n    }\n    try {\n      const notebook = notebookPanel.content;\n      if (cell_index < 0 || cell_index >= notebook.widgets.length) {\n        showNotification(`Invalid cell index ${cell_index + 1}`, 'error');\n        return;\n      }\n      notebookPanel.model.sharedModel.deleteCell(cell_index);\n      showNotification(\n        `Cell at index ${cell_index + 1} deleted successfully`,\n        'success'\n      );\n    } catch (error) {\n      showNotification(\n        `Error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'error'\n      );\n    }\n  };\n\n  const handleRevertOperation = async (\n    cell: CodeCell,\n    metadata: JupytApprovedOperation\n  ): Promise<boolean> => {\n    if (!notebookPanel?.model || !cell.model) {\n      showNotification(\n        'Notebook or cell model not available for revert.',\n        'error'\n      );\n      return false;\n    }\n    const notebook = notebookPanel.content;\n    const notebookModel = notebookPanel.model;\n    const cellModel = cell.model as CodeCellModel;\n\n    console.log('Attempting revert:', metadata.type, 'for cell:', cellModel.id);\n\n    try {\n      switch (metadata.type) {\n        case 'create_cell':\n          // eslint-disable-next-line no-case-declarations\n          const indexToDelete = notebook.widgets.findIndex(w => w === cell);\n          if (indexToDelete !== -1) {\n            notebookModel.sharedModel.deleteCell(indexToDelete);\n            showNotification(\n              'Cell creation reverted (cell deleted).',\n              'success'\n            );\n            return true; // Revert successful\n          } else {\n            throw new Error(\n              'Could not find index for created cell to revert-delete.'\n            );\n          }\n        // No return needed here due to throw/return above\n\n        case 'update_cell':\n          if (metadata.previousCode !== undefined) {\n            cellModel.sharedModel.setSource(metadata.previousCode);\n            // TODO: Decide if running the cell after revert is desired/needed\n            showNotification('Cell update reverted.', 'success');\n            return true; // Revert successful\n          } else {\n            throw new Error(\n              'Cannot revert update: Previous code not found in metadata.'\n            );\n          }\n        // No return needed here due to throw/return above\n\n        case 'delete_cell':\n          showNotification(\n            'Cannot revert a delete operation this way.',\n            'error'\n          );\n          console.warn(\n            'Attempted to revert a delete operation via handleRevertOperation'\n          );\n          return false; // Revert not possible/applicable\n\n        default:\n          showNotification(\n            `Cannot revert unsupported operation type: ${metadata.type}`,\n            'error'\n          );\n          return false; // Revert failed\n      }\n    } catch (error) {\n      console.error('Error reverting operation:', error);\n      showNotification(\n        `Failed to revert operation: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'error'\n      );\n      return false; // Revert failed\n    }\n  };\n\n  return {\n    copyToNotebook,\n    modifyCell,\n    handleAddCell,\n    handleDeleteCell,\n    handleRevertOperation\n  };\n}\n","export const showNotification = (\n  message: string,\n  type: 'success' | 'error'\n) => {\n  const notification = document.createElement('div');\n  notification.style.position = 'fixed';\n  notification.style.top = '20px';\n  notification.style.right = '20px';\n  notification.style.backgroundColor =\n    type === 'success' ? '#4caf50' : '#f44336';\n  notification.style.color = 'white';\n  notification.style.padding = '16px';\n  notification.style.borderRadius = '4px';\n  notification.style.zIndex = '1000';\n  notification.style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';\n  notification.textContent = message;\n  document.body.appendChild(notification);\n\n  setTimeout(\n    () => {\n      document.body.removeChild(notification);\n    },\n    type === 'success' ? 3000 : 5000\n  );\n};\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport cellToolbarPlugin from './plugins/cell-toolbar';\nimport { JupytPanel } from './panel';\n\n// Create the chat icon\nconst chatIcon = new LabIcon({\n  name: 'jupyter-ai:chat',\n  svgstr: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" viewBox=\"0 0 24 24\">\n      <path d=\"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z\"/>\n    </svg>`\n});\n\nexport namespace CommandIDs {\n  /**\n   * Command to toggle AI Chat sidebar visibility.\n   */\n  export const toggleAiChat = 'jupyter-ai:toggle-chat';\n}\n\n/**\n * Initialization data for the jupyt extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyt:plugin',\n  autoStart: true,\n  requires: [ICommandPalette, ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    settings: ISettingRegistry\n  ) => {\n    console.log('JupyterLab extension jupyt is activated!');\n\n    const panel = new JupytPanel(app);\n    panel.id = 'jupyt-panel';\n    panel.title.label = 'Jupyt';\n    panel.title.icon = chatIcon;\n    panel.title.closable = true;\n\n    app.shell.add(panel, 'right');\n\n    const command = 'jupyt:open';\n    app.commands.addCommand(command, {\n      label: 'Open Jupyt',\n      execute: () => {\n        app.shell.activateById(panel.id);\n        return null;\n      }\n    });\n\n    palette.addItem({ command, category: 'Jupyt' });\n  }\n};\n\nconst plugins: JupyterFrontEndPlugin<any>[] = [plugin, cellToolbarPlugin];\n\nexport default plugins;\n","import React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { Chat } from './components/chat';\nimport JupytSettings from './components/jupyt-settings';\nimport UserProfile from './components/user-profile';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { ISessionContext } from '@jupyterlab/apputils';\nimport { Box, IconButton } from '@mui/material';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport HomeIcon from '@mui/icons-material/Home';\nimport { ThemeProvider } from './theme-provider';\nimport { CommandRegistry } from '@lumino/commands';\n\n/**\n * JupytPanel\n * Main sidebar panel for Jupyt, now with tabs for Chat, Settings, and User Profile.\n */\nexport class JupytPanel extends ReactWidget {\n  private app: JupyterFrontEnd;\n  private _notebookPanel: NotebookPanel | undefined;\n  private _sessionContext: ISessionContext | undefined;\n  private commands: CommandRegistry;\n  state: {\n    activeView: string;\n  };\n\n  constructor(app: JupyterFrontEnd) {\n    super();\n    this.app = app;\n    this.commands = app.commands;\n    this.addClass('jp-JupytPanel');\n    this.node.style.position = 'relative';\n    this.node.style.zIndex = '1000';\n    this.state = {\n      activeView: 'chat'\n    };\n    this._updateNotebookPanel();\n    const shell = this.app.shell;\n    if (shell && shell.currentChanged) {\n      shell.currentChanged.connect(this._onCurrentWidgetChanged, this);\n    }\n  }\n\n  private _onCurrentWidgetChanged = (): void => {\n    this._updateNotebookPanel();\n  };\n\n  private _updateNotebookPanel(): void {\n    const shell = this.app.shell;\n    if (!shell) {\n      console.warn('Shell is not available');\n      return;\n    }\n    const currentWidget = shell.currentWidget;\n    let notebookPanel: NotebookPanel | undefined;\n    if (currentWidget instanceof NotebookPanel) {\n      notebookPanel = currentWidget;\n    } else {\n      const widgets = shell.widgets('main') || [];\n      for (const widget of widgets) {\n        if (widget instanceof NotebookPanel) {\n          notebookPanel = widget;\n          break;\n        }\n      }\n    }\n    const sessionContext = notebookPanel?.sessionContext;\n    if (\n      this._notebookPanel !== notebookPanel ||\n      this._sessionContext !== sessionContext\n    ) {\n      this._notebookPanel = notebookPanel;\n      this._sessionContext = sessionContext;\n      this.update();\n    }\n  }\n\n  dispose(): void {\n    const shell = this.app.shell;\n    if (shell && shell.currentChanged) {\n      shell.currentChanged.disconnect(this._onCurrentWidgetChanged, this);\n    }\n    super.dispose();\n  }\n  private toggleHome = () => {\n    this.state = {\n      activeView: 'chat'\n    };\n    this.update();\n  };\n\n  private toggleSettings = () => {\n    this.state = {\n      activeView: this.state.activeView === 'settings' ? 'chat' : 'settings'\n    };\n    this.update();\n  };\n\n  private toggleProfile = () => {\n    this.state = {\n      activeView: this.state.activeView === 'profile' ? 'chat' : 'profile'\n    };\n    this.update();\n  };\n\n  render(): JSX.Element {\n    const { activeView } = this.state;\n\n    return (\n      <ThemeProvider commands={this.commands}>\n        <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              alignItems: 'center',\n              padding: '4px 8px',\n              borderBottom: '1px solid var(--jp-border-color1)'\n            }}\n          >\n            <IconButton\n              onClick={this.toggleHome}\n              size=\"small\"\n              title=\"Chat\"\n              sx={{ \n                mr: 1,\n                color: activeView === 'chat' ? 'primary.main' : 'inherit'\n              }}\n            >\n              <HomeIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              onClick={this.toggleProfile}\n              size=\"small\"\n              title=\"User Profile\"\n              sx={{ \n                mr: 1,\n                color: activeView === 'profile' ? 'primary.main' : 'inherit'\n              }}\n            >\n              <AccountCircleIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              onClick={this.toggleSettings}\n              size=\"small\"\n              title=\"Settings\"\n              sx={{ \n                color: activeView === 'settings' ? 'primary.main' : 'inherit'\n              }}\n            >\n              <SettingsIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n\n          <Box sx={{ flex: 1, overflow: 'auto', position: 'relative' }}>\n            {activeView === 'settings' ? (\n              <JupytSettings />\n            ) : activeView === 'profile' ? (\n              <UserProfile />\n            ) : (\n              <Chat\n                notebookPanel={this._notebookPanel}\n                sessionContext={this._sessionContext}\n              />\n            )}\n          </Box>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport {\n  INotebookTracker,\n  NotebookPanel,\n  NotebookActions\n} from '@jupyterlab/notebook';\nimport { Cell, CodeCell, CodeCellModel } from '@jupyterlab/cells';\nimport { CellService } from '../services/cell-service';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CellApprovalControls } from '../components/cell-approval-controls';\nimport {\n  JupytPendingOperation,\n  JupytApprovedOperation,\n  PENDING_OPERATION_METADATA_KEY,\n  APPROVED_OPERATION_METADATA_KEY\n} from '../types/cell-metadata';\nimport { showNotification } from '../hooks/use-show-notification';\n\nconst JUPYT_UI_CONTAINER_CLASS = 'jupyt-cell-ui-container';\n\n/**\n * Injects or updates the Jupyt UI (Approval controls) in a cell based on metadata.\n */\nexport const injectOrUpdateCellUI = (cell: CodeCell, panel: NotebookPanel) => {\n  if (\n    !cell.model ||\n    !(cell instanceof CodeCell) ||\n    !cell.inputArea /* Check needed for typing */\n  ) {\n    return;\n  }\n\n  const model = cell.model as CodeCellModel;\n  const pendingMetadata = model.sharedModel.getMetadata(\n    PENDING_OPERATION_METADATA_KEY\n  ) as JupytPendingOperation | undefined;\n\n  // Find container within the main cell node\n  let container = cell.node.querySelector(\n    `:scope > .${JUPYT_UI_CONTAINER_CLASS}`\n  ) as HTMLElement;\n\n  // Clean up existing UI if no relevant metadata is found\n  if (!pendingMetadata) {\n    if (container) {\n      ReactDOM.unmountComponentAtNode(container);\n      container.remove();\n    }\n    return;\n  }\n\n  // Create container if it doesn't exist\n  if (!container) {\n    container = document.createElement('div');\n    container.className = JUPYT_UI_CONTAINER_CLASS;\n    // Add margin below the container\n    container.style.marginTop = '10px';\n    // Add left margin to align with cell content\n    container.style.marginLeft = '70px'; // Estimated prompt width\n    // Append to the main cell node (instead of prepending)\n    cell.node.appendChild(container);\n  }\n\n  // Render the approval component if pending metadata exists\n  ReactDOM.render(\n    React.createElement(CellApprovalControls, {\n      pendingOperation: pendingMetadata,\n      onApprove: () => handleApprove(cell, panel, pendingMetadata),\n      onReject: () => handleReject(cell, panel, pendingMetadata)\n    }),\n    container\n  );\n};\n\n/**\n * Handles the approval of a pending operation.\n */\nexport const handleApprove = async (\n  cell: CodeCell,\n  panel: NotebookPanel,\n  metadata: JupytPendingOperation\n) => {\n  if (!cell.model) {\n    return;\n  }\n  const model = cell.model as CodeCellModel;\n\n  // --- IMMEDIATE UI REMOVAL ---\n  // Clear pending metadata *first* to trigger UI removal immediately\n  try {\n    model.sharedModel.deleteMetadata(PENDING_OPERATION_METADATA_KEY);\n    injectOrUpdateCellUI(cell, panel);\n  } catch (e) {\n    console.error('Failed to clear pending metadata for UI removal:', e);\n    // Continue with approval attempt anyway\n  }\n  // --- END IMMEDIATE UI REMOVAL ---\n\n  const notebook = panel.content;\n  const notebookModel = panel.model;\n\n  if (!notebookModel) {\n    showNotification('Notebook model not found. Cannot approve.', 'error');\n    // Attempt to clear approved metadata if it was somehow set before failure\n    try {\n      model.sharedModel.deleteMetadata(APPROVED_OPERATION_METADATA_KEY);\n    } catch {\n      return;\n    }\n  }\n  try {\n    let approvedMetadata: JupytApprovedOperation | null = null;\n    let cellIndexToRun: number | null = null;\n    const runAfterDelete = false;\n\n    switch (metadata.type) {\n      case 'create_cell':\n        if (metadata.code !== undefined) {\n          model.sharedModel.setSource(metadata.code);\n          approvedMetadata = {\n            type: 'create_cell',\n            previousCodeForCreate: '',\n            runAfterApproval: metadata.runNeeded\n          };\n          const index = notebook.widgets.findIndex(w => w === cell);\n          if (index !== -1 && metadata.runNeeded) {\n            cellIndexToRun = index;\n          }\n          showNotification('Cell created successfully.', 'success');\n        } else {\n          throw new Error('Missing code for create operation.');\n        }\n        break;\n      case 'update_cell':\n        if (metadata.code !== undefined && metadata.oldCode !== undefined) {\n          model.sharedModel.setSource(metadata.code);\n          approvedMetadata = {\n            type: 'update_cell',\n            previousCode: metadata.oldCode,\n            runAfterApproval: metadata.runNeeded\n          };\n          const index = notebook.widgets.findIndex(w => w === cell);\n          if (index !== -1 && metadata.runNeeded) {\n            cellIndexToRun = index;\n          }\n          showNotification('Cell updated successfully.', 'success');\n        } else {\n          throw new Error('Missing code or oldCode for update operation.');\n        }\n        break;\n      case 'delete_cell':\n        // eslint-disable-next-line no-case-declarations\n        const indexToDelete = notebook.widgets.findIndex(w => w === cell);\n        if (indexToDelete !== -1) {\n          // Store the next cell index before deletion if we need to run it\n          let nextCellIndex = null;\n          if (\n            metadata.runNeeded &&\n            indexToDelete + 1 < notebook.widgets.length\n          ) {\n            nextCellIndex = indexToDelete + 1;\n          }\n\n          // Delete the cell\n          if (notebookModel) {\n            notebookModel.sharedModel.deleteCell(indexToDelete);\n            showNotification('Cell deleted successfully.', 'success');\n\n            // If we need to run the next cell after deletion\n            if (\n              nextCellIndex !== null &&\n              panel.sessionContext.session?.kernel\n            ) {\n              notebook.activeCellIndex = nextCellIndex;\n              await NotebookActions.run(notebook, panel.sessionContext);\n            }\n          } else {\n            throw new Error('Could not find cell index to delete.');\n          }\n        }\n        break;\n      default:\n        console.warn('Unsupported operation type for approval:', metadata.type);\n        showNotification(`Unsupported operation: ${metadata.type}`, 'error');\n        return;\n    }\n\n    // Set approved metadata *after* operation succeeds (if applicable)\n    if (approvedMetadata) {\n      // We already deleted pending, just set approved\n      model.sharedModel.setMetadata(\n        APPROVED_OPERATION_METADATA_KEY,\n        approvedMetadata as any\n      );\n    }\n    // For delete, the metadata is gone with the cell.\n\n    // Run Cell if Needed\n    if (cellIndexToRun !== null && panel.sessionContext.session?.kernel) {\n      notebook.activeCellIndex = cellIndexToRun;\n      await NotebookActions.run(notebook, panel.sessionContext);\n    } else if (runAfterDelete) {\n      console.log(\n        'Run needed after delete - current implementation does not run.'\n      );\n    }\n  } catch (error) {\n    console.error('Error approving operation:', error);\n    showNotification(\n      `Failed to approve operation: ${error instanceof Error ? error.message : 'Unknown error'}`,\n      'error'\n    );\n    // Pending metadata was already cleared. Ensure approved isn't set if it failed.\n    try {\n      model.sharedModel.deleteMetadata(APPROVED_OPERATION_METADATA_KEY);\n    } catch {\n      return;\n    }\n  }\n};\n\n/**\n * Handles the rejection of a pending operation.\n */\nexport const handleReject = (\n  cell: CodeCell,\n  panel: NotebookPanel,\n  metadata: JupytPendingOperation\n) => {\n  if (!cell.model) {\n    return;\n  }\n  const model = cell.model as CodeCellModel;\n\n  // --- IMMEDIATE UI REMOVAL ---\n  // Clear pending metadata *first* to trigger UI removal immediately\n  try {\n    model.sharedModel.deleteMetadata(PENDING_OPERATION_METADATA_KEY);\n    injectOrUpdateCellUI(cell, panel);\n  } catch (e) {\n    console.error('Failed to clear pending metadata for UI removal:', e);\n    // Continue with rejection attempt anyway\n  }\n  // --- END IMMEDIATE UI REMOVAL ---\n\n  const notebook = panel.content;\n  const notebookModel = panel.model;\n\n  if (!notebookModel) {\n    showNotification('Notebook model not found. Cannot reject.', 'error');\n    return;\n  }\n  try {\n    switch (metadata.type) {\n      case 'create_cell':\n        // eslint-disable-next-line no-case-declarations\n        const indexToDelete = notebook.widgets.findIndex(w => w === cell);\n        if (indexToDelete !== -1) {\n          notebookModel.sharedModel.deleteCell(indexToDelete);\n          showNotification(\n            'Cell creation rejected and placeholder removed.',\n            'success'\n          );\n        } else {\n          throw new Error(\n            'Could not find index for rejected placeholder cell.'\n          );\n        }\n        return; // Exit after deletion\n      case 'update_cell':\n        showNotification('Cell update rejected.', 'success');\n        break; // Metadata already cleared\n      case 'delete_cell':\n        showNotification('Cell deletion rejected.', 'success');\n        break; // Metadata already cleared\n      default:\n        console.warn(\n          'Unsupported operation type for rejection:',\n          metadata.type\n        );\n        showNotification(\n          `Cannot reject unsupported operation: ${metadata.type}`,\n          'error'\n        );\n        return;\n    }\n    // Metadata was cleared at the start\n  } catch (error) {\n    console.error('Error rejecting operation:', error);\n    showNotification(\n      `Failed to reject operation: ${error instanceof Error ? error.message : 'Unknown error'}`,\n      'error'\n    );\n    // Metadata was already attempted to be cleared\n  }\n};\n\n// --- Plugin Definition ---\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyt:cell-toolbar',\n  autoStart: true,\n  requires: [INotebookTracker],\n  activate: (app: JupyterFrontEnd, notebooks: INotebookTracker) => {\n    const cellService = CellService.getInstance();\n\n    notebooks.widgetAdded.connect((sender, panel: NotebookPanel) => {\n      const addAIButton = (cell: Cell) => {\n        // Find the JupyterLab toolbar\n        const jupyterToolbar = cell.node.querySelector('.jp-Toolbar');\n        if (!jupyterToolbar) {\n          return;\n        }\n\n        // Remove any existing AI buttons to prevent duplicates\n        const existingButtons =\n          jupyterToolbar.querySelectorAll('.jupyt-ai-button');\n        existingButtons.forEach(button => button.remove());\n\n        // Add cell number label\n        let cellNumberLabel =\n          jupyterToolbar.querySelector('.jupyt-cell-number');\n        if (!cellNumberLabel) {\n          cellNumberLabel = document.createElement('div');\n          cellNumberLabel.className = 'jupyt-cell-number';\n          (cellNumberLabel as HTMLElement).style.marginLeft = 'auto'; // Push to the right\n          (cellNumberLabel as HTMLElement).style.marginRight = '8px';\n          (cellNumberLabel as HTMLElement).style.fontSize = '12px';\n          (cellNumberLabel as HTMLElement).style.color =\n            'var(--jp-ui-font-color2)';\n          (cellNumberLabel as HTMLElement).style.fontFamily =\n            'var(--jp-ui-font-family)';\n          jupyterToolbar.appendChild(cellNumberLabel);\n        }\n\n        // Get cell index and update the label\n        const notebook = panel.content;\n        const cellIndex = notebook.widgets.findIndex(c => c === cell);\n        if (cellNumberLabel) {\n          cellNumberLabel.textContent = `Cell [${cellIndex + 1}]`;\n        }\n\n        const button = document.createElement('button');\n        button.className = 'jp-Button jp-ToolbarButton jupyt-ai-button';\n        button.title = 'Use Jupyt Assistant for this cell';\n        button.innerHTML = `\n          <span class=\"jp-ToolbarButton-icon\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8 0C3.6 0 0 3.6 0 8C0 12.4 3.6 16 8 16C12.4 16 16 12.4 16 8C16 3.6 12.4 0 8 0ZM8 14C4.7 14 2 11.3 2 8C2 4.7 4.7 2 8 2C11.3 2 14 4.7 14 8C14 11.3 11.3 14 8 14Z\" fill=\"currentColor\"/>\n              <path d=\"M8 4C6.3 4 5 5.3 5 7C5 8.7 6.3 10 8 10C9.7 10 11 8.7 11 7C11 5.3 9.7 4 8 4ZM8 8C7.4 8 7 7.6 7 7C7 6.4 7.4 6 8 6C8.6 6 9 6.4 9 7C9 7.6 8.6 8 8 8Z\" fill=\"currentColor\"/>\n            </svg>\n          </span>\n          <span class=\"jp-ToolbarButton-label\">AI</span>\n        `;\n\n        button.onclick = () => {\n          cellService.selectCell(cell);\n        };\n\n        // Find the move up button (which is typically the first button)\n        const moveUpButton = jupyterToolbar.querySelector(\n          '.jp-Button[data-command=\"notebook:move-cell-up\"]'\n        );\n\n        if (moveUpButton) {\n          // Insert after the move up button\n          moveUpButton.insertAdjacentElement('afterend', button);\n        } else {\n          // Fallback: insert at the beginning of the toolbar\n          const firstButton = jupyterToolbar.querySelector('.jp-Button');\n          if (firstButton) {\n            firstButton.insertAdjacentElement('beforebegin', button);\n          } else {\n            jupyterToolbar.insertBefore(button, jupyterToolbar.firstChild);\n          }\n        }\n      };\n\n      // Function to update all cell numbers\n      const updateAllCellNumbers = () => {\n        panel.content.widgets.forEach((cell, index) => {\n          const toolbar = cell.node.querySelector('.jp-Toolbar');\n          if (toolbar) {\n            let numberLabel = toolbar.querySelector('.jupyt-cell-number');\n            if (!numberLabel) {\n              numberLabel = document.createElement('div');\n              numberLabel.className = 'jupyt-cell-number';\n              (numberLabel as HTMLElement).style.marginLeft = 'auto';\n              (numberLabel as HTMLElement).style.marginRight = '8px';\n              (numberLabel as HTMLElement).style.fontSize = '12px';\n              (numberLabel as HTMLElement).style.color =\n                'var(--jp-ui-font-color2)';\n              (numberLabel as HTMLElement).style.fontFamily =\n                'var(--jp-ui-font-family)';\n              toolbar.appendChild(numberLabel);\n            }\n            numberLabel.textContent = `Cell [${index + 1}]`;\n          }\n        });\n      };\n\n      // --- NEW: Inject UI based on metadata for all cells ---\n      const setupCellUIs = () => {\n        panel.content.widgets.forEach(cell => {\n          if (cell instanceof CodeCell) {\n            injectOrUpdateCellUI(cell, panel);\n          }\n        });\n      };\n\n      // Listen for metadata changes on ANY cell in the model\n      panel.model?.sharedModel.changed.connect((sharedModel, changes) => {\n        if (changes.metadataChange) {\n          // Add a minimal delay to allow DOM updates before checking/injecting UI\n          setTimeout(() => {\n            setupCellUIs();\n          }, 50); // 50ms delay, adjust if needed\n        }\n      });\n\n      // Listen for cell list changes (add/remove)\n      panel.model?.cells.changed.connect(() => {\n        // No timeout - run immediately (might cause flicker if DOM isn't ready, but let's try)\n        updateAllCellNumbers();\n        setupCellUIs();\n        // Potential TODO: Check if a slight delay is needed here if UI doesn't appear reliably\n      });\n\n      // Initial setup for existing cells\n      panel.revealed.then(() => {\n        // Keep this delay - needed to ensure initial DOM is ready\n        setTimeout(() => {\n          panel.content.widgets.forEach(addAIButton);\n          updateAllCellNumbers();\n          setupCellUIs();\n        }, 1000);\n      });\n\n      // Update AI button and UI on active cell change\n      panel.content.activeCellChanged.connect((_, cell) => {\n        if (cell) {\n          // No timeout - run immediately\n          addAIButton(cell);\n          if (cell instanceof CodeCell) {\n            injectOrUpdateCellUI(cell, panel);\n          }\n        }\n      });\n    });\n  }\n};\n\nexport default plugin;\n","import { API_CONFIG } from '../config';\nimport { INotebookState, IModelConfig } from '../types/api';\nimport { StreamChunk } from '../types/stream';\n\nexport interface IAgenticAssistantPayload {\n  query: string;\n  session_id: string;\n  notebook_state: INotebookState;\n  llm_config: IModelConfig;\n  search?: boolean;\n  plan?: string;\n  plan_stage?: string;\n  cell_output?: string;\n}\n\n/**\n * Calls the /assistant endpoint and yields StreamChunk objects as they arrive.\n */\nexport async function* streamAgenticAssistant(\n  payload: IAgenticAssistantPayload\n): AsyncGenerator<StreamChunk, void, unknown> {\n  // Use the API key that was set during authentication\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-API-Key': API_CONFIG.apiKey,\n    Accept: 'text/event-stream'\n  };\n\n  // Validate API key exists\n  if (!API_CONFIG.apiKey) {\n    throw new Error('API key is missing. Please log in first.');\n  } else {\n    // Log that we have a valid API key - this helps confirm it's loaded correctly after refresh\n    console.log(\n      'Using API key from config (length):',\n      API_CONFIG.apiKey.length\n    );\n  }\n  // Log the model being used for debugging\n  console.log('Sending request with model:', payload);\n\n  // Ensure the model is being sent in the correct format\n  // The API expects the model to be passed as is, e.g. 'claude-3-7-sonnet'\n  // No modifications are made to the model name selected by the user\n\n  const response = await fetch(`${API_CONFIG.baseUrl}/assistant`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(payload)\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  const reader = response.body?.getReader();\n  if (!reader) {\n    throw new Error('Response body reader could not be created');\n  }\n  const decoder = new TextDecoder();\n  let buffer = '';\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    const chunkStr = decoder.decode(value, { stream: true });\n    buffer += chunkStr;\n    const lines = buffer.split('\\n');\n    buffer = lines.pop() || '';\n    for (const line of lines) {\n      if (!line.startsWith('data:')) {\n        continue;\n      }\n      const data = line.slice(5).trim();\n      if (!data) {\n        continue;\n      }\n      try {\n        const chunk: StreamChunk = JSON.parse(data);\n        yield chunk;\n      } catch (err) {\n        // Ignore parse errors for incomplete lines\n      }\n    }\n  }\n}\n","import { API_CONFIG } from '../config';\nimport {\n  IRegisterRequest,\n  IRegisterResponse,\n  ILoginRequest,\n  ILoginResponse,\n  IModelsResponse,\n  IUserResponse\n} from '../types/auth';\n\nexport class AuthService {\n  private static instance: AuthService;\n  private baseUrl = API_CONFIG.baseUrl;\n\n  private constructor() {}\n\n  public static getInstance(): AuthService {\n    if (!AuthService.instance) {\n      AuthService.instance = new AuthService();\n    }\n    return AuthService.instance;\n  }\n\n  /**\n   * Get the base URL used for API requests\n   */\n  public getBaseUrl(): string {\n    return this.baseUrl;\n  }\n\n  /**\n   * Register a new user\n   */\n  public async register(\n    userData: IRegisterRequest\n  ): Promise<IRegisterResponse> {\n    const response = await fetch(`${this.baseUrl}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.message || `Registration failed: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Login a user and get access token\n   */\n  public async login(credentials: ILoginRequest): Promise<ILoginResponse> {\n    const formData = new URLSearchParams();\n    formData.append('username', credentials.username);\n    formData.append('password', credentials.password);\n\n    const response = await fetch(`${this.baseUrl}/token`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formData.toString()\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.message || `Login failed: ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Get available models\n   */\n  public async getAvailableModels(apiKey: string): Promise<IModelsResponse> {\n    const response = await fetch(`${this.baseUrl}/models`, {\n      method: 'GET',\n      headers: {\n        'X-API-Key': apiKey\n      }\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.message || `Failed to fetch models: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Get current user's profile information\n   */\n  public async getCurrentUser(apiKey: string): Promise<IUserResponse> {\n    const response = await fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'X-API-Key': apiKey\n      }\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.message || `Failed to fetch user profile: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  }\n}\n","import { Cell } from '@jupyterlab/cells';\nimport { NotebookPanel } from '@jupyterlab/notebook';\n\nexport interface ICellInfo {\n  id: string;\n  type: string;\n  content: string;\n  metadata: any;\n  cellNumber: number;\n}\n\nexport class CellService {\n  private static instance: CellService;\n  private selectedCell: Cell | null = null;\n  private notebookPanel: NotebookPanel | null = null;\n\n  private constructor() {}\n\n  static getInstance(): CellService {\n    if (!CellService.instance) {\n      CellService.instance = new CellService();\n    }\n    return CellService.instance;\n  }\n\n  setNotebookPanel(panel: NotebookPanel) {\n    this.notebookPanel = panel;\n  }\n\n  selectCell(cell: Cell) {\n    this.selectedCell = cell;\n    this.notifyCellSelected();\n  }\n\n  getCellNumber(cell: Cell): number {\n    if (!this.notebookPanel) {\n      return -1;\n    }\n    return this.notebookPanel.content.widgets.indexOf(cell) + 1;\n  }\n\n  getCellByNumber(cellNumber: number): Cell | null {\n    if (!this.notebookPanel) {\n      return null;\n    }\n    const index = cellNumber - 1;\n    if (index >= 0 && index < this.notebookPanel.content.widgets.length) {\n      return this.notebookPanel.content.widgets[index];\n    }\n    return null;\n  }\n\n  getCellById(cellId: string): Cell | null {\n    if (!this.notebookPanel) {\n      return null;\n    }\n    const cells = this.notebookPanel.content.widgets;\n    return cells.find(cell => cell.model.id === cellId) || null;\n  }\n\n  getCellInfo(cell: Cell): ICellInfo {\n    return {\n      id: cell.model.id,\n      type: cell.model.type,\n      content: cell.model.sharedModel.source,\n      metadata: cell.model.metadata,\n      cellNumber: this.getCellNumber(cell)\n    };\n  }\n\n  updateCell(cellId: string, content: string) {\n    if (!this.notebookPanel) {\n      return;\n    }\n\n    const cells = this.notebookPanel.content.widgets;\n    const cell = cells.find(c => c.model.id === cellId);\n\n    if (cell) {\n      cell.model.sharedModel.source = content;\n    }\n  }\n\n  deleteCell(cellId: string) {\n    if (!this.notebookPanel) {\n      return;\n    }\n\n    const cells = this.notebookPanel.content.widgets;\n    const cellIndex = cells.findIndex(c => c.model.id === cellId);\n\n    if (cellIndex !== -1) {\n      // this.notebookPanel.content.model?.cells.delete(cellIndex);\n    }\n  }\n\n  private notifyCellSelected() {\n    if (this.selectedCell) {\n      const cellInfo = this.getCellInfo(this.selectedCell);\n      // Dispatch custom event for sidebar to listen\n      const event = new CustomEvent('jupyt:cell-selected', {\n        detail: cellInfo\n      });\n      document.dispatchEvent(event);\n    }\n  }\n}\n","import React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode\n} from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { ThemeMode, createAppTheme } from './theme';\nimport { CommandRegistry } from '@lumino/commands';\n\n// Define known JupyterLab theme names\nconst JUPYTERLAB_LIGHT_THEME = 'JupyterLab Light';\nconst JUPYTERLAB_DARK_THEME = 'JupyterLab Dark';\n\ntype ThemeContextType = {\n  themeMode: ThemeMode;\n  setThemeMode: (mode: ThemeMode) => void;\n  currentTheme: 'light' | 'dark';\n};\n\n// Create context with default values\nconst ThemeContext = createContext<ThemeContextType>({\n  themeMode: 'system',\n  setThemeMode: () => {},\n  currentTheme: 'light'\n});\n\n// Hook to use the theme context\nexport const useTheme = () => useContext(ThemeContext);\n\ntype ThemeProviderProps = {\n  children: ReactNode;\n  commands: CommandRegistry;\n};\n\n// Function to get JupyterLab's theme\nconst getJupyterLabTheme = (): 'light' | 'dark' => {\n  if (typeof document === 'undefined') {\n    return 'light'; // Default in SSR/non-browser\n  }\n  // Check for JupyterLab theme attribute on body or html\n  const themeLight =\n    document.body.getAttribute('data-jp-theme-light') === 'true' ||\n    document.documentElement.getAttribute('data-jp-theme-light') === 'true';\n  return themeLight ? 'light' : 'dark';\n};\n\n// Theme provider component\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children,\n  commands\n}) => {\n  // Get initial theme mode from localStorage or default to system\n  const [themeMode, _setThemeMode] = useState<ThemeMode>(() => {\n    if (typeof window !== 'undefined') {\n      const savedMode = localStorage.getItem('jupyt-theme-mode');\n      return (savedMode as ThemeMode) || 'system';\n    }\n    return 'system';\n  });\n\n  // Calculate the actual theme based on mode and JupyterLab/system preference\n  const [currentTheme, setCurrentTheme] = useState<'light' | 'dark'>(() =>\n    themeMode === 'system'\n      ? getJupyterLabTheme()\n      : (themeMode as 'light' | 'dark')\n  );\n\n  // New setThemeMode function that includes command execution\n  const setThemeMode = async (mode: ThemeMode) => {\n    _setThemeMode(mode); // Update internal state\n\n    // Save preference to localStorage\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('jupyt-theme-mode', mode);\n    }\n\n    // Change JupyterLab theme if mode is light or dark\n    if (mode === 'light' || mode === 'dark') {\n      const targetTheme =\n        mode === 'light' ? JUPYTERLAB_LIGHT_THEME : JUPYTERLAB_DARK_THEME;\n      try {\n        if (commands.hasCommand('apputils:change-theme')) {\n          await commands.execute('apputils:change-theme', {\n            theme: targetTheme\n          });\n          console.log(`Jupyt AI: Changed JupyterLab theme to ${targetTheme}`);\n        } else {\n          console.warn('Jupyt AI: Command apputils:change-theme not found.');\n        }\n      } catch (error) {\n        console.error(\n          `Jupyt AI: Failed to change JupyterLab theme to ${targetTheme}:`,\n          error\n        );\n      }\n    }\n  };\n\n  // Update the theme when internal themeMode state changes\n  useEffect(() => {\n    // Removed localStorage setting here, handled in setThemeMode\n\n    // If theme is set to system, sync from JupyterLab's theme\n    if (themeMode === 'system') {\n      setCurrentTheme(getJupyterLabTheme());\n    }\n  }, [themeMode]); // Depends on internal themeMode\n\n  // Listen for JupyterLab theme changes when in system mode\n  useEffect(() => {\n    if (themeMode !== 'system' || typeof document === 'undefined') {\n      return;\n    }\n\n    // Use MutationObserver to detect changes in JupyterLab theme attribute\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (\n          mutation.type === 'attributes' &&\n          (mutation.attributeName === 'data-jp-theme-light' ||\n            mutation.attributeName === 'data-jp-theme-name')\n        ) {\n          const newJupyterLabTheme = getJupyterLabTheme();\n\n          // Always update the visual theme\n          setCurrentTheme(newJupyterLabTheme);\n\n          // Get the current setting value *before* potentially changing it\n          const currentSetting = themeMode; // Access the state variable directly\n\n          // If the setting is not 'system' and it mismatches the new theme,\n          // update the setting itself to reflect the change.\n          if (\n            currentSetting !== 'system' &&\n            currentSetting !== newJupyterLabTheme\n          ) {\n            _setThemeMode(newJupyterLabTheme); // Update the state controlling the dropdown\n            // Also update localStorage to persist this externally triggered change\n            if (typeof window !== 'undefined') {\n              localStorage.setItem('jupyt-theme-mode', newJupyterLabTheme);\n            }\n            console.log(\n              `Jupyt AI: Setting changed to ${newJupyterLabTheme} to match external JupyterLab theme change.`\n            );\n          }\n        }\n      });\n    });\n\n    // Observe changes on body and html attributes\n    observer.observe(document.body, { attributes: true });\n    observer.observe(document.documentElement, { attributes: true });\n\n    // Initial check in case the theme changed before observer was set up\n    setCurrentTheme(getJupyterLabTheme());\n\n    // Clean up observer on unmount or when mode changes\n    return () => {\n      observer.disconnect();\n    };\n  }, [themeMode]); // Re-run effect if themeMode changes\n\n  // Create theme based on current mode\n  const theme = createAppTheme(currentTheme);\n\n  // Use the new setThemeMode in the context provider value\n  return (\n    <ThemeContext.Provider value={{ themeMode, setThemeMode, currentTheme }}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n","import { createTheme, Theme, ThemeOptions } from '@mui/material/styles';\n\nexport type ThemeMode = 'light' | 'dark' | 'system';\n\n// Helper function to read JupyterLab CSS variables\nconst getJupyterLabColor = (varName: string, fallback: string): string => {\n  if (typeof window === 'undefined' || !document) {\n    return fallback;\n  }\n  // Try to get the color from JupyterLab CSS variables\n  const computedStyle = window.getComputedStyle(document.documentElement);\n  return computedStyle.getPropertyValue(varName).trim() || fallback;\n};\n\n// Light theme configuration that integrates with JupyterLab\nexport const lightThemeOptions: ThemeOptions = {\n  palette: {\n    mode: 'light',\n    primary: {\n      main: getJupyterLabColor('--jp-brand-color1', '#1976d2')\n    },\n    secondary: {\n      main: getJupyterLabColor('--jp-warn-color0', '#dc004e')\n    },\n    background: {\n      default: getJupyterLabColor('--jp-layout-color0', '#f5f5f5'),\n      paper: getJupyterLabColor('--jp-layout-color1', '#ffffff')\n    },\n    text: {\n      primary: getJupyterLabColor('--jp-content-font-color0', '#212121'),\n      secondary: getJupyterLabColor('--jp-content-font-color2', '#757575')\n    },\n    divider: getJupyterLabColor('--jp-border-color1', '#e0e0e0')\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: {\n          color: getJupyterLabColor('--jp-content-font-color0', '#212121'),\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }\n};\n\n// Dark theme configuration that integrates with JupyterLab\nexport const darkThemeOptions: ThemeOptions = {\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: getJupyterLabColor('--jp-brand-color1', '#90caf9')\n    },\n    secondary: {\n      main: getJupyterLabColor('--jp-warn-color0', '#f48fb1')\n    },\n    background: {\n      default: getJupyterLabColor('--jp-layout-color0', '#121212'),\n      paper: getJupyterLabColor('--jp-layout-color1', '#1e1e1e')\n    },\n    text: {\n      primary: getJupyterLabColor('--jp-content-font-color0', '#e0e0e0'),\n      secondary: getJupyterLabColor('--jp-content-font-color2', '#a0a0a0')\n    },\n    divider: getJupyterLabColor('--jp-border-color1', '#424242')\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: {\n          color: getJupyterLabColor('--jp-content-font-color0', '#e0e0e0'),\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }\n};\n\n// Create theme based on the mode\nexport const createAppTheme = (mode: 'light' | 'dark'): Theme => {\n  return createTheme(mode === 'light' ? lightThemeOptions : darkThemeOptions);\n};\n\n// Get system color scheme preference\nexport const getSystemThemePreference = (): 'light' | 'dark' => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n  }\n  return 'light'; // Default to light if matchMedia is not available\n};\n","import { CellOperation } from './stream';\n\n/**\n * Metadata stored in a cell when an operation is pending user approval.\n */\nexport interface JupytPendingOperation {\n  /** Type of operation pending. */\n  type: CellOperation['type'];\n  /** The proposed code content. Required for 'create' and 'update'. */\n  code?: string;\n  /** The original code content before the update. Required for 'update'. */\n  oldCode?: string;\n  /** Original cell index (for updates/deletes). */\n  originalIndex?: number;\n  /** Whether the cell should be run after approval. */\n  runNeeded?: boolean;\n}\n\n/**\n * Metadata stored in a cell after an operation has been approved, allowing for revert.\n */\nexport interface JupytApprovedOperation {\n  /** Type of operation that was approved. */\n  type: CellOperation['type'];\n  /** The code content of the cell *before* the approved update. Only for 'update'. */\n  previousCode?: string;\n  /** The code content of the cell *before* the approved creation (empty). Only for 'create'. */\n  previousCodeForCreate?: ''; // Mark explicitly for created cells\n  /** Whether the cell was run after approval. */\n  runAfterApproval?: boolean;\n}\n\n/**\n * Key used to store pending operation metadata in a cell.\n */\nexport const PENDING_OPERATION_METADATA_KEY = 'jupyt_pending_operation';\n\n/**\n * Key used to store approved operation metadata in a cell.\n */\nexport const APPROVED_OPERATION_METADATA_KEY = 'jupyt_approved_operation';\n","import { INotebookCell } from '../types/api';\n\n/**\n * Extracts plain text output from a notebook cell, ignoring images/plots.\n * @param cell The notebook cell object\n * @returns Concatenated plain text output\n */\nexport function extractTextOutputFromCell(cell: INotebookCell): string {\n  if (!cell.outputs || !Array.isArray(cell.outputs)) {\n    return '';\n  }\n  return cell.outputs\n    .filter(\n      output =>\n        output.output_type === 'stream' ||\n        output.output_type === 'error' ||\n        (output.output_type === 'execute_result' &&\n          output.data &&\n          typeof output.data['text/plain'] === 'string')\n    )\n    .map(output => {\n      if (output.output_type === 'stream') {\n        return (output as any).text || '';\n      }\n      if (output.output_type === 'error') {\n        return (\n          ((output as any).ename || '') + ': ' + ((output as any).evalue || '')\n        );\n      }\n      if (\n        output.output_type === 'execute_result' &&\n        output.data &&\n        output.data['text/plain']\n      ) {\n        return output.data['text/plain'];\n      }\n      return '';\n    })\n    .join('\\n')\n    .trim();\n}\n","export function extractCellReferences(text: string): {\n  cleanQuery: string;\n  cellNumbers: Set<number>;\n} {\n  const cellRefs = text.match(/@cell(\\d+)/g) || [];\n  const cellNumbers = new Set(\n    cellRefs.map(ref => parseInt(ref.replace('@cell', ''), 10))\n  );\n  const cleanQuery = text.replace(/@cell\\d+\\s*/g, '').trim();\n  return { cleanQuery, cellNumbers };\n}\n\n// Utility to strip markdown code block markers from code\nexport function stripCodeBlockMarkers(code: string): string {\n  // Remove triple backticks and optional language\n  return code.replace(/^```[a-zA-Z]*\\n?|```$/gm, '').trim();\n}\n\n// Helper to extract JSON object from a string containing text + JSON\nexport function extractJsonFromContent(content: string): {\n  json: any | null;\n  rest: string;\n} {\n  const firstBrace = content.indexOf('{');\n  const lastBrace = content.lastIndexOf('}');\n  if (firstBrace !== -1 && lastBrace !== -1 && lastBrace > firstBrace) {\n    const jsonStr = content.slice(firstBrace, lastBrace + 1);\n    try {\n      const json = JSON.parse(jsonStr);\n      const rest = (\n        content.slice(0, firstBrace) + content.slice(lastBrace + 1)\n      ).trim();\n      return { json, rest };\n    } catch (e) {\n      // fallback: treat as plain text\n    }\n  }\n  return { json: null, rest: content };\n}\n\n/**\n * Removes all <cell_operation>...</cell_operation> blocks from a string.\n */\nexport function removeCellOperationTags(input: string): string {\n  return input\n    .replace(/<cell_operation>[\\s\\S]*?<\\/cell_operation>/g, '')\n    .trim();\n}\n","import { INotebookCell, INotebookState } from '../types/api';\nimport { NotebookPanel } from '@jupyterlab/notebook';\n\n/**\n * Extracts the full notebook state in the format required by the agentic loop API.\n * @param notebookPanel The JupyterLab NotebookPanel instance\n * @returns INotebookState object containing all cells and notebook metadata\n */\nexport function extractNotebookState(\n  notebookPanel: NotebookPanel | undefined\n): INotebookState {\n  if (!notebookPanel || !notebookPanel.model) {\n    return { cells: [], metadata: {} };\n  }\n  const notebook = notebookPanel.content;\n  const model = notebookPanel.model;\n  const cells: INotebookCell[] = notebook.widgets.map((cellWidget, idx) => {\n    const cellModel = cellWidget.model;\n    return {\n      cell_id: cellModel.id,\n      cell_type: cellModel.type,\n      source: cellModel.sharedModel.getSource(),\n      outputs:\n        cellModel.type === 'code' && 'outputs' in cellModel\n          ? (cellModel as any).outputs?.toJSON?.() || []\n          : [],\n      cell_index: idx\n    };\n  });\n  const metadata = model.sharedModel.getMetadata();\n  return { cells, metadata };\n}\n"],"names":[],"sourceRoot":""}